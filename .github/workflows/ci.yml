name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript compilation
      run: npm run build
      
    - name: Run tests (when available)
      run: npm test || echo "No tests configured yet"
      continue-on-error: true
      
    - name: Build production bundle
      run: npm run build:prod
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-node-${{ matrix.node-version }}
        path: dist/

  deploy-npm:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production bundle
      run: npm run build:prod
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  verify-deployment:
    needs: [test, deploy-npm]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Wait for jsDelivr sync
      run: sleep 300  # Wait 5 minutes for jsDelivr to sync
      
    - name: Verify jsDelivr CDN availability
      run: |
        COMMIT_HASH="${{ github.sha }}"
        CDN_URL="https://cdn.jsdelivr.net/gh/CorporateDirect/Forms@${COMMIT_HASH}/dist/index.min.js"
        
        echo "Checking CDN URL: $CDN_URL"
        
        # Try up to 5 times with increasing delays
        for i in {1..5}; do
          if curl -f -s "$CDN_URL" > /dev/null; then
            echo "✅ CDN URL is accessible"
            exit 0
          else
            echo "❌ Attempt $i failed, waiting..."
            sleep $((i * 30))
          fi
        done
        
        echo "⚠️ CDN URL not yet available, but deployment succeeded"
        exit 0

  create-release-notes:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate jsDelivr URLs
      run: |
        COMMIT_HASH="${{ github.sha }}"
        VERSION="${{ github.event.release.tag_name }}"
        
        echo "## 🚀 Deployment URLs" >> release_notes.md
        echo "" >> release_notes.md
        echo "### jsDelivr CDN (Recommended)" >> release_notes.md
        echo '```html' >> release_notes.md
        echo "<!-- Commit-specific (most reliable) -->" >> release_notes.md
        echo "<script src=\"https://cdn.jsdelivr.net/gh/CorporateDirect/Forms@${COMMIT_HASH}/dist/index.min.js\"></script>" >> release_notes.md
        echo "" >> release_notes.md
        echo "<!-- Version-specific -->" >> release_notes.md
        echo "<script src=\"https://cdn.jsdelivr.net/gh/CorporateDirect/Forms@${VERSION}/dist/index.min.js\"></script>" >> release_notes.md
        echo "" >> release_notes.md
        echo "<!-- Latest (auto-updates) -->" >> release_notes.md
        echo "<script src=\"https://cdn.jsdelivr.net/gh/CorporateDirect/Forms@latest/dist/index.min.js\"></script>" >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "### NPM CDN" >> release_notes.md
        echo '```html' >> release_notes.md
        echo "<script src=\"https://cdn.jsdelivr.net/npm/form-functionality-library@${VERSION}/dist/index.js\"></script>" >> release_notes.md
        echo '```' >> release_notes.md
        
        cat release_notes.md
        
    - name: Update release with deployment info
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const releaseNotes = fs.readFileSync('release_notes.md', 'utf8');
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: context.payload.release.body + '\n\n' + releaseNotes
          }); 