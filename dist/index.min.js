import{SELECTORS}from"./config.js";import{logVerbose}from"./modules/utils.js";import{FormState}from"./modules/formState.js";import{initBranching,resetBranching,getNextStep,getBranchingState}from"./modules/branching.js";import{initMultiStep,goToStep,showStep,hideStep,getCurrentStepInfo,getMultiStepState}from"./modules/multiStep.js";import{initValidation,validateField,validateStep,validateAllVisibleFields,getValidationState}from"./modules/validation.js";import{initErrors,showError,clearError,clearAllErrors,getErrorState}from"./modules/errors.js";import{initSummary,updateSummary,clearSummary,getSummaryState}from"./modules/summary.js";class FormLibrary{constructor(){this.initialized=!1,this.rootElement=document,logVerbose("FormLibrary instance created")}static getInstance(){return FormLibrary.instance||(FormLibrary.instance=new FormLibrary),FormLibrary.instance}init(t=document){this.initialized&&(logVerbose("FormLibrary already initialized, reinitializing..."),this.destroy()),this.rootElement=t,logVerbose("Initializing FormLibrary",{root:t===document?"document":"custom element"});const e=t.querySelectorAll(SELECTORS.MULTISTEP),r=t.querySelectorAll(SELECTORS.LOGIC),i=t.querySelectorAll(SELECTORS.STEP);if(logVerbose("Form detection results",{multistepForms:e.length,logicForms:r.length,stepElements:i.length}),0!==e.length||0!==i.length)try{initErrors(t),initValidation(t),r.length>0&&initBranching(t),(e.length>0||i.length>0)&&initMultiStep(t),initSummary(t),this.initialized=!0,logVerbose("FormLibrary initialization complete"),this.logCurrentState()}catch(t){throw logVerbose("FormLibrary initialization failed",t),t}else logVerbose("No compatible forms found, library will not initialize")}destroy(){if(this.initialized){logVerbose("Destroying FormLibrary");try{resetBranching()}catch(t){logVerbose("Error during FormLibrary destruction",t)}FormState.clear(),this.initialized=!1,logVerbose("FormLibrary destruction complete")}else logVerbose("FormLibrary not initialized, nothing to destroy")}isInitialized(){return this.initialized}getState(){return{initialized:this.initialized,formState:FormState.getDebugInfo(),branching:getBranchingState(),multiStep:getMultiStepState(),validation:getValidationState(),errors:getErrorState(),summary:getSummaryState()}}logCurrentState(){const t=this.getState();logVerbose("Current FormLibrary State",t)}validateForm(){if(!this.initialized)return logVerbose("Cannot validate form - library not initialized"),!1;logVerbose("Validating entire form");const t=validateAllVisibleFields();return logVerbose("Form validation result",{isValid:t}),t}resetForm(){if(this.initialized){logVerbose("Resetting form to initial state"),clearAllErrors(),FormState.clear(),clearSummary();try{goToStep(0)}catch(t){logVerbose("Could not go to first step during reset",t)}logVerbose("Form reset complete")}else logVerbose("Cannot reset form - library not initialized")}getFormData(){return FormState.getAll()}setFormData(t){Object.entries(t).forEach(([t,e])=>{FormState.setField(t,e)}),updateSummary(),logVerbose("Form data set",t)}}const FormLib=FormLibrary.getInstance();export default FormLib;export{FormState,initBranching,resetBranching,getNextStep,initMultiStep,goToStep,showStep,hideStep,getCurrentStepInfo,initValidation,validateField,validateStep,validateAllVisibleFields,initErrors,showError,clearError,clearAllErrors,initSummary,updateSummary,clearSummary};if("undefined"!=typeof window){const t=()=>{const t=document.querySelectorAll(SELECTORS.MULTISTEP),e=document.querySelectorAll(SELECTORS.STEP);(t.length>0||e.length>0)&&(logVerbose("Auto-initializing FormLibrary on DOM ready"),FormLib.init())};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",t):t()}"undefined"!=typeof window&&(window.FormLib=FormLib,logVerbose("FormLib attached to window for debugging"));