"use strict";var FormLib=(()=>{var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var index_exports={};__export(index_exports,{FormState:()=>FormState,clearAllErrors:()=>clearAllErrors,clearError:()=>clearError,clearSummary:()=>clearSummary,default:()=>index_default,getCurrentStepInfo:()=>getCurrentStepInfo,goToStep:()=>goToStep,initBranching:()=>initBranching,initErrors:()=>initErrors,initMultiStep:()=>initMultiStep,initSummary:()=>initSummary,initValidation:()=>initValidation,resetBranching:()=>resetBranching,showError:()=>showError,showStep:()=>showStep,updateSummary:()=>updateSummary,validateAllVisibleFields:()=>validateAllVisibleFields,validateField:()=>validateField,validateStep:()=>validateStep});var SELECTORS={MULTISTEP:'[data-form="multistep"]',LOGIC:"[data-logic]",STEP:'[data-form="step"]',ANSWER:"[data-answer]",GO_TO:"[data-go-to]",SKIP:"[data-skip]",NEXT_BTN:'[data-form="next-btn"]',BACK_BTN:'[data-form="back-btn"]',SUBMIT:'[data-form="submit"]',SUBMIT_BTN:'[data-form="submit-btn"]',ERROR_DISPLAY:'[data-form="error"]',SKIP_IF:"[data-skip-if]",SKIP_UNLESS:"[data-skip-unless]",SKIP_SECTION:"[data-skip-section]",ALLOW_SKIP_UNDO:"[data-allow-skip-undo]",SKIP_REASON:"[data-skip-reason]",SHOW_IF:"[data-show-if]",STEP_TYPE:"[data-step-type]",STEP_SUBTYPE:"[data-step-subtype]",STEP_NUMBER:"[data-step-number]",STEP_FIELD_NAME:"[data-step-field-name]",SUMMARY_FIELD:"[data-summary-field]",SUMMARY_TYPE:"[data-summary-type]",SUMMARY_SUBTYPE:"[data-summary-subtype]",SUMMARY_NUMBER:"[data-summary-number]",JOIN:"[data-join]",REQUIRED:"[required]",ERROR_MESSAGE:"[data-error-message]",VALIDATE:"[data-validate]",ALL_INPUTS:"input, select, textarea"};var DEFAULTS={START_STEP:1,DEBUG:true,LOG_PREFIX:"[FormLib]",VALIDATION_DELAY:300,ANIMATION_DURATION:300,JOIN_SEPARATOR:{space:" ",comma:", ",dash:" - ",pipe:" | ",newline:"\n"}};var CSS_CLASSES={ACTIVE_STEP:"active-step",HIDDEN_STEP:"hidden-step",HIDDEN_STEP_ITEM:"hidden-step-item",ERROR_FIELD:"error-field",ACTIVE_ERROR:"active-error",DISABLED:"disabled",SKIPPED_STEP:"skipped-step",SKIP_AVAILABLE:"skip-available",SKIP_DISABLED:"skip-disabled"};var queryCache=new Map;function logVerbose(message,data){if(!DEFAULTS.DEBUG)return;const timestamp=new Date().toISOString().split("T")[1].split(".")[0];const prefix=`${DEFAULTS.LOG_PREFIX} [${timestamp}]`;if(data!==void 0){console.log(`${prefix} ${message}`,data)}else{console.log(`${prefix} ${message}`)}}function clearQueryCache(){queryCache.clear()}function queryAllByAttr(selector,root=document){if(root===document){const cacheKey=`all:${selector}`;if(queryCache.has(cacheKey)){return queryCache.get(cacheKey)}const result=root.querySelectorAll(selector);queryCache.set(cacheKey,result);return result}return root.querySelectorAll(selector)}function queryByAttr(selector,root=document){if(root===document){const cacheKey=`single:${selector}`;if(queryCache.has(cacheKey)){return queryCache.get(cacheKey)}const result=root.querySelector(selector);queryCache.set(cacheKey,result);return result}return root.querySelector(selector)}function getAttrValue(element,attribute){return element.getAttribute(attribute)}function addClass(element,className){element.classList.add(className)}function removeClass(element,className){element.classList.remove(className)}function hasClass(element,className){return element.classList.contains(className)}function showElement(element){removeClass(element,"hidden-step");const originalDisplay=element.getAttribute("data-original-display")||"";if(originalDisplay&&originalDisplay!=="none"){element.style.setProperty("display",originalDisplay,"important")}else{const shouldBeFlex=element.classList.contains("flex")||element.classList.contains("d-flex")||element.classList.contains("step_wrapper")||getComputedStyle(element).display==="flex";element.style.setProperty("display",shouldBeFlex?"flex":"block","important")}element.style.setProperty("visibility","visible","important");element.style.setProperty("opacity","1","important");console.log(`\u{1F504} [Utils] Showing element:`,{element,tagName:element.tagName,id:element.id,className:element.className,originalDisplay:originalDisplay||"none stored",currentDisplay:element.style.display,computedDisplay:getComputedStyle(element).display,computedVisibility:getComputedStyle(element).visibility,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)})}function hideElement(element){const computedDisplay=getComputedStyle(element).display;if(computedDisplay&&computedDisplay!=="none"){element.setAttribute("data-original-display",computedDisplay)}addClass(element,"hidden-step");element.style.setProperty("display","none","important");element.style.setProperty("visibility","hidden","important");element.style.setProperty("opacity","0","important");console.log(`\u{1F504} [Utils] Hiding element:`,{element,tagName:element.tagName,id:element.id,className:element.className,originalDisplay:computedDisplay,currentDisplay:element.style.display,computedDisplay:getComputedStyle(element).display,computedVisibility:getComputedStyle(element).visibility,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)})}function isVisible(element){const style=getComputedStyle(element);return style.display!=="none"&&style.visibility!=="hidden"&&style.opacity!=="0"&&!hasClass(element,"hidden-step")}function debounce(func,delay){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout(()=>func(...args),delay)}}function isFormInput(element){return element instanceof HTMLInputElement||element instanceof HTMLSelectElement||element instanceof HTMLTextAreaElement}function getInputValue(input){if(input instanceof HTMLInputElement){if(input.type==="checkbox"||input.type==="radio"){return input.checked?input.value:""}return input.value}if(input instanceof HTMLSelectElement&&input.multiple){return Array.from(input.selectedOptions).map(option=>option.value)}return input.value}function delegateEvent(root,eventType,selector,handler){const delegatedHandler=event=>{const target=event.target?.closest(selector);if(target){handler(event,target)}};root.addEventListener(eventType,delegatedHandler);return()=>{root.removeEventListener(eventType,delegatedHandler)}}var FormStateManager=class _FormStateManager{constructor(){this.data={};this.steps={};this.branchPath={currentStep:"",previousSteps:[],skippedSteps:[],skipHistory:[],activeConditions:{}};logVerbose("FormState initialized")}static getInstance(){if(!_FormStateManager.instance){_FormStateManager.instance=new _FormStateManager}return _FormStateManager.instance}setField(name,value){const oldValue=this.data[name];this.data[name]=value;logVerbose(`Field updated: ${name}`,{oldValue,newValue:value});this.onFieldChange(name,value,oldValue)}getField(name){return this.data[name]}getAll(){return{...this.data}}clear(){const oldData={...this.data};this.data={};this.steps={};this.branchPath={currentStep:"",previousSteps:[],skippedSteps:[],skipHistory:[],activeConditions:{}};logVerbose("FormState cleared",{oldData})}clearFields(fieldNames){const clearedFields={};fieldNames.forEach(name=>{if(this.data[name]!==void 0){clearedFields[name]=this.data[name];delete this.data[name]}});if(Object.keys(clearedFields).length>0){logVerbose("Fields cleared due to branch change",clearedFields)}}setStepInfo(stepId,info){if(!this.steps[stepId]){this.steps[stepId]={visible:false,visited:false}}Object.assign(this.steps[stepId],info);logVerbose(`Step info updated: ${stepId}`,this.steps[stepId])}getStepInfo(stepId){return this.steps[stepId]}getAllSteps(){return{...this.steps}}setStepVisibility(stepId,visible){this.setStepInfo(stepId,{visible});logVerbose(`Step visibility updated: ${stepId}`,{visible})}setCurrentStep(stepId){if(this.branchPath.currentStep&&this.branchPath.currentStep!==stepId){this.branchPath.previousSteps.push(this.branchPath.currentStep)}this.branchPath.currentStep=stepId;this.setStepInfo(stepId,{visited:true});logVerbose(`Current step changed to: ${stepId}`,this.branchPath)}getCurrentStep(){return this.branchPath.currentStep}getBranchPath(){return{...this.branchPath}}addSkippedStep(stepId,reason,canUndo=true){if(!this.branchPath.skippedSteps.includes(stepId)){this.branchPath.skippedSteps.push(stepId);const skipEntry={stepId,reason,timestamp:Date.now(),canUndo,fieldsCleared:[]};this.branchPath.skipHistory.push(skipEntry);this.setStepInfo(stepId,{skipped:true,skipReason:reason,allowSkipUndo:canUndo});logVerbose(`Step skipped: ${stepId}`,{reason,canUndo,totalSkipped:this.branchPath.skippedSteps.length})}}undoSkipStep(stepId){const skipIndex=this.branchPath.skippedSteps.indexOf(stepId);if(skipIndex===-1){logVerbose(`Cannot undo skip - step not in skipped list: ${stepId}`);return false}const stepInfo=this.getStepInfo(stepId);if(stepInfo&&stepInfo.allowSkipUndo===false){logVerbose(`Cannot undo skip - undo not allowed for step: ${stepId}`);return false}this.branchPath.skippedSteps.splice(skipIndex,1);this.setStepInfo(stepId,{skipped:false,skipReason:void 0});const historyEntry=this.branchPath.skipHistory.find(entry=>entry.stepId===stepId);if(historyEntry){historyEntry.canUndo=false}logVerbose(`Skip undone for step: ${stepId}`,{remainingSkipped:this.branchPath.skippedSteps.length});return true}isStepSkipped(stepId){return this.branchPath.skippedSteps.includes(stepId)}getSkipHistory(){return[...this.branchPath.skipHistory]}getSkippedSteps(){return[...this.branchPath.skippedSteps]}clearSkipHistory(){this.branchPath.skippedSteps=[];this.branchPath.skipHistory=[];Object.keys(this.steps).forEach(stepId=>{if(this.steps[stepId].skipped){this.setStepInfo(stepId,{skipped:false,skipReason:void 0})}});logVerbose("Skip history cleared")}getSkipStats(){const stats={totalSkipped:this.branchPath.skippedSteps.length,canUndoCount:0,skipReasons:{}};this.branchPath.skipHistory.forEach(entry=>{if(entry.canUndo){stats.canUndoCount++}if(entry.reason){stats.skipReasons[entry.reason]=(stats.skipReasons[entry.reason]||0)+1}});return stats}setActiveCondition(key,value){this.branchPath.activeConditions[key]=value;logVerbose(`Active condition set: ${key}`,value)}getActiveCondition(key){return this.branchPath.activeConditions[key]}getFieldsByStep(){const result={};Object.entries(this.data).forEach(([key,value])=>{result[key]=value});return result}onFieldChange(name,newValue,oldValue){if(newValue!==oldValue){logVerbose(`Field change detected: ${name}`,{from:oldValue,to:newValue})}}goToPreviousStep(){const previousStep=this.branchPath.previousSteps.pop();if(previousStep){this.branchPath.currentStep=previousStep;logVerbose(`Went back to previous step: ${previousStep}`,this.branchPath);return previousStep}return null}wasStepVisited(stepId){return this.steps[stepId]?.visited||false}isStepVisible(stepId){return this.steps[stepId]?.visible||false}getDebugInfo(){return{data:this.data,steps:this.steps,branchPath:this.branchPath,fieldCount:Object.keys(this.data).length,stepCount:Object.keys(this.steps).length}}};var FormState=FormStateManager.getInstance();var EventEmitter=class{constructor(){this.events={};this.moduleStates=new Map}registerModule(name){this.moduleStates.set(name,{initialized:true,name})}unregisterModule(name){this.moduleStates.delete(name)}isModuleInitialized(name){return this.moduleStates.get(name)?.initialized??false}on(event,listener){if(!this.events[event]){this.events[event]=[]}this.events[event].push(listener);return()=>{this.off(event,listener)}}off(event,listener){if(!this.events[event]){return}this.events[event]=this.events[event].filter(l=>l!==listener)}emit(event,data){const eventName=String(event);console.log(`\u{1F504} [FormEvents] Emitting event: ${eventName}`,{eventData:data,timestamp:new Date().toISOString(),hasListeners:!!this.events[event],listenerCount:this.events[event]?.length||0});if(!this.events[event]){console.warn(`\u26A0\uFE0F [FormEvents] No listeners registered for event: ${eventName}`);return}if(event==="skip:request"&&!this.isModuleInitialized("multiStep")){console.error(`\u274C [FormEvents] CRITICAL: Skipping '${eventName}' event - multiStep module not initialized`,{eventData:data,registeredModules:Array.from(this.moduleStates.keys()),multiStepState:this.moduleStates.get("multiStep")});return}if(event==="branch:change"&&!this.isModuleInitialized("multiStep")){console.error(`\u274C [FormEvents] CRITICAL: Skipping '${eventName}' event - multiStep module not initialized`,{eventData:data,registeredModules:Array.from(this.moduleStates.keys()),multiStepState:this.moduleStates.get("multiStep")});return}let successCount=0;let errorCount=0;this.events[event].forEach((listener,index)=>{try{console.log(`\u{1F4E1} [FormEvents] Calling listener ${index+1}/${this.events[event].length} for ${eventName}`);listener(data);successCount++;console.log(`\u2705 [FormEvents] Listener ${index+1} completed successfully for ${eventName}`)}catch(error){errorCount++;console.error(`\u{1F4A5} [FormEvents] LISTENER ERROR ${index+1}/${this.events[event].length} for '${eventName}':`,{error,errorMessage:error instanceof Error?error.message:String(error),errorStack:error instanceof Error?error.stack:void 0,eventData:data,listenerIndex:index})}});console.log(`\u{1F4CA} [FormEvents] Event ${eventName} completed:`,{totalListeners:this.events[event].length,successful:successCount,failed:errorCount,eventData:data})}};var formEvents=new EventEmitter;var initialized=false;var cleanupFunctions=[];function initBranching(root=document){if(initialized){logVerbose("Branching already initialized, cleaning up first");resetBranching()}logVerbose("Initializing branching logic");const multistepForms=root.querySelectorAll(SELECTORS.MULTISTEP);const stepElements=root.querySelectorAll(SELECTORS.STEP);if(multistepForms.length===0&&stepElements.length===0){logVerbose("Warning: Branching initialized but no multi-step forms found. Branch events may not be handled.")}setupBranchingListeners(root);initialized=true;logVerbose("Branching initialization complete");formEvents.registerModule("branching")}function setupBranchingListeners(root){const cleanup1=delegateEvent(root,"change",SELECTORS.GO_TO,handleBranchTrigger);const cleanup2=delegateEvent(root,"input",SELECTORS.GO_TO,handleBranchTrigger);const cleanup3=delegateEvent(root,"click",SELECTORS.GO_TO,handleBranchTrigger);const cleanup4=delegateEvent(root,"click","label.radio_field, .w-radio, .radio_button-skip-step, .w-form-formradioinput, .w-radio-input",handleRadioLabelClick);cleanupFunctions.push(cleanup1,cleanup2,cleanup3,cleanup4)}function handleRadioLabelClick(event,target){let radioInput=null;radioInput=target.querySelector('input[type="radio"][data-go-to]');if(!radioInput){const parentLabel=target.closest("label");if(parentLabel){radioInput=parentLabel.querySelector('input[type="radio"][data-go-to]')}}if(!radioInput){const container=target.closest(".radio_field, .w-radio, .radio_component");if(container){radioInput=container.querySelector('input[type="radio"][data-go-to]')}}if(radioInput&&getAttrValue(radioInput,"data-go-to")){event.preventDefault();event.stopPropagation();radioInput.checked=true;applyRadioActiveClass(radioInput);const syntheticEvent=new Event("change",{bubbles:true});Object.defineProperty(syntheticEvent,"target",{value:radioInput});handleBranchTrigger(syntheticEvent,radioInput)}}function evaluateCondition(condition,activeConditions){if(!condition||typeof condition!=="string"){logVerbose("Invalid condition provided",{condition});return false}try{const trimmedCondition=condition.trim();if(trimmedCondition.includes(",")){const conditions=trimmedCondition.split(",").map(c=>c.trim());return conditions.some(cond=>!!activeConditions[cond])}if(trimmedCondition.includes("&")){const conditions=trimmedCondition.split("&").map(c=>c.trim());return conditions.every(cond=>!!activeConditions[cond])}return!!activeConditions[trimmedCondition]}catch(error){logVerbose("Error evaluating condition",{condition,error});return false}}function validateGoToValue(goToValue){if(!goToValue)return false;const validStepIdPattern=/^[a-zA-Z0-9_-]+$/;if(!validStepIdPattern.test(goToValue)){logVerbose("Invalid data-go-to value format",{goToValue});return false}return true}function handleBranchTrigger(event,target){console.log("\u{1F33F} [Branch] Trigger event detected",{eventType:event.type,element:target,tagName:target.tagName,className:target.className,id:target.id});if(!initialized){console.error("\u274C [Branch] Module not initialized, ignoring branch trigger",{target,initialized,eventType:event.type});return}if(!isFormInput(target)){console.log("\u2139\uFE0F [Branch] Element is not a form input, ignoring",{tagName:target.tagName,isInput:target instanceof HTMLInputElement,isSelect:target instanceof HTMLSelectElement,isTextarea:target instanceof HTMLTextAreaElement});return}const goToValue=getAttrValue(target,"data-go-to");const fieldName=target.name||getAttrValue(target,"data-step-field-name");const inputValue=getInputValue(target);const inputType=target.type||target.tagName;console.log("\u{1F4CB} [Branch] Data attributes analysis:",{"data-go-to":goToValue,"data-step-field-name":getAttrValue(target,"data-step-field-name"),"name":target.name,"type":inputType,"value":inputValue,"checked":target.checked,allAttributes:Array.from(target.attributes).map(attr=>({name:attr.name,value:attr.value}))});if(goToValue&&!validateGoToValue(goToValue)){console.error("\u274C [Branch] Invalid data-go-to value format",{goToValue,validFormat:"alphanumeric, hyphens, underscores only",pattern:"/^[a-zA-Z0-9_-]+$/"});return}console.log("\u{1F3AF} [Branch] Processing branch trigger:",{element:target,goTo:goToValue,value:inputValue,type:inputType,fieldName,hasGoTo:!!goToValue,hasValue:!!inputValue});if(fieldName){FormState.setField(fieldName,inputValue);console.log("\u{1F4BE} [Branch] Field value stored in FormState:",{fieldName,value:inputValue,previousValue:FormState.getField(fieldName)})}else{console.warn("\u26A0\uFE0F [Branch] No field name found, cannot store value in FormState",{element:target,name:target.name,dataStepFieldName:getAttrValue(target,"data-step-field-name")})}try{if(target instanceof HTMLInputElement){if(target.type==="radio"&&target.checked){console.log("\u{1F4FB} [Branch] Processing radio button selection:",{name:target.name,value:target.value,checked:target.checked,goTo:goToValue});if(!goToValue){console.warn("\u26A0\uFE0F [Branch] Radio button has no data-go-to attribute, skipping navigation",{element:target,name:target.name,value:target.value});return}const targetElement=document.querySelector(`[data-answer="${goToValue}"]`);if(!targetElement){const allAnswerElements=document.querySelectorAll("[data-answer]");const allAnswerValues=Array.from(allAnswerElements).map(el=>getAttrValue(el,"data-answer"));console.error("\u274C [Branch] Target step not found in DOM!",{searchedFor:goToValue,availableSteps:allAnswerValues,suggestion:`Check if element with data-answer="${goToValue}" exists`,possibleMatches:allAnswerValues.filter(val=>val&&val.includes(goToValue))})}handleRadioGroupSelection(target);applyRadioActiveClass(target);activateBranch(goToValue,target.value);console.log("\u{1F680} [Branch] Emitting branch:change event:",{targetStepId:goToValue,triggerValue:target.value,triggerType:"radio"});formEvents.emit("branch:change",{targetStepId:goToValue})}else if(target.type==="checkbox"){console.log("\u2611\uFE0F [Branch] Processing checkbox:",{name:target.name,value:target.value,checked:target.checked,goTo:goToValue});if(goToValue){if(target.checked){console.log("\u2705 [Branch] Checkbox checked, activating branch:",{goToValue});activateBranch(goToValue,target.value)}else{console.log("\u274C [Branch] Checkbox unchecked, deactivating branch:",{goToValue});deactivateBranch(goToValue)}}}else if(target.type!=="radio"&&target.type!=="checkbox"){console.log("\u{1F4DD} [Branch] Processing text input/other:",{type:target.type,name:target.name,value:inputValue,goTo:goToValue});if(goToValue){if(inputValue){console.log("\u2705 [Branch] Input has value, activating branch:",{goToValue,inputValue});activateBranch(goToValue,inputValue)}else{console.log("\u274C [Branch] Input is empty, deactivating branch:",{goToValue});deactivateBranch(goToValue)}}}}else{console.log("\u{1F4CB} [Branch] Processing select/textarea:",{tagName:target.tagName,value:inputValue,goTo:goToValue});if(goToValue){if(inputValue){console.log("\u2705 [Branch] Element has value, activating branch:",{goToValue,inputValue});activateBranch(goToValue,inputValue)}else{console.log("\u274C [Branch] Element is empty, deactivating branch:",{goToValue});deactivateBranch(goToValue)}}}}catch(error){console.error("\u{1F4A5} [Branch] Error handling branch trigger:",{error,errorMessage:error instanceof Error?error.message:String(error),errorStack:error instanceof Error?error.stack:void 0,element:target,goToValue,inputValue,fieldName})}const activeConditions=FormState.getBranchPath().activeConditions;if(Object.keys(activeConditions).length>0){console.log("\u{1F504} [Branch] Updating step visibility based on active conditions:",{activeConditions,conditionCount:Object.keys(activeConditions).length});updateStepVisibility()}else{console.log("\u2139\uFE0F [Branch] No active conditions, skipping step visibility update")}}function applyRadioActiveClass(selectedRadio){const groupName=selectedRadio.name;if(!groupName)return;const activeClass=getAttrValue(selectedRadio,"fs-inputactive-class")||"is-active-inputactive";const radioGroup=document.querySelectorAll(`input[type="radio"][name="${groupName}"]`);radioGroup.forEach(radio=>{const htmlRadio=radio;const radioLabel=htmlRadio.closest("label");if(htmlRadio!==selectedRadio){htmlRadio.classList.remove(activeClass);radioLabel?.classList.remove(activeClass)}});selectedRadio.classList.add(activeClass);const parentLabel=selectedRadio.closest("label");parentLabel?.classList.add(activeClass)}function handleRadioGroupSelection(selectedRadio){const groupName=selectedRadio.name;if(!groupName)return;const allRadiosInGroup=document.querySelectorAll(`input[type="radio"][name="${groupName}"]`);allRadiosInGroup.forEach(radio=>{const r=radio;if(r!==selectedRadio){const goToValue=getAttrValue(r,"data-go-to");if(goToValue){deactivateBranch(goToValue)}}})}function activateBranch(target,value){if(!target)return;FormState.setActiveCondition(target,value)}function deactivateBranch(target){if(!target)return;FormState.setActiveCondition(target,null);clearBranchFields(target)}function updateStepVisibility(){const allConditionalSteps=queryAllByAttr("[data-show-if]");const activeConditions=FormState.getBranchPath().activeConditions;allConditionalSteps.forEach(step=>{const condition=getAttrValue(step,"data-show-if");const stepId=getAttrValue(step,"data-answer");if(condition&&stepId){if(evaluateCondition(condition,activeConditions)){showElement(step);FormState.setStepVisibility(stepId,true);enableRequiredFields(step)}else{hideElement(step);FormState.setStepVisibility(stepId,false);disableRequiredFields(step)}}})}function enableRequiredFields(stepElement){const fields=stepElement.querySelectorAll("input, select, textarea");fields.forEach(field=>{const input=field;const originalRequired=input.getAttribute("data-original-required");if(originalRequired==="true"){input.required=true}})}function disableRequiredFields(stepElement){const fields=stepElement.querySelectorAll("input[required], select[required], textarea[required]");fields.forEach(field=>{const input=field;input.setAttribute("data-original-required","true");input.required=false})}function clearBranchFields(branchTarget){const fieldsToClear=[];const branchContainer=queryByAttr(`[data-answer="${branchTarget}"]`);if(branchContainer){const fields=queryAllByAttr("[data-step-field-name]",branchContainer);fields.forEach(field=>{const fieldName=getAttrValue(field,"data-step-field-name");if(fieldName){fieldsToClear.push(fieldName)}})}if(fieldsToClear.length>0){FormState.clearFields(fieldsToClear)}}function resetBranching(){if(!initialized){logVerbose("Branching module not initialized, nothing to reset");return}logVerbose("Resetting branching module");formEvents.unregisterModule("branching");cleanupFunctions.forEach(fn=>fn());cleanupFunctions=[];const branchPath=FormState.getBranchPath();branchPath.activeConditions={};initialized=false;logVerbose("Branching module reset")}function getBranchingState(){return{initialized,activeConditions:FormState.getBranchPath().activeConditions}}var errorConfigs=new Map;var errorStates=new Map;function initErrors(root=document){logVerbose("Initializing error handling");const inputs=root.querySelectorAll("input, select, textarea");inputs.forEach(input=>{const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(fieldName){errorConfigs.set(fieldName,{fieldName,element:input,customMessage:getAttrValue(input,"data-error-message")||void 0})}});logVerbose(`Error handling initialized for ${errorConfigs.size} fields`)}function showError(fieldName,message){const config=errorConfigs.get(fieldName);if(!config){logVerbose(`Cannot show error for unknown field: ${fieldName}`);return}const errorMessage=message||config.customMessage||"This field has an error";logVerbose(`Showing error for field: ${fieldName}`,{message:errorMessage});addClass(config.element,CSS_CLASSES.ERROR_FIELD);const errorElement=findOrCreateErrorElement(config);if(errorElement){errorElement.textContent=errorMessage;addClass(errorElement,CSS_CLASSES.ACTIVE_ERROR);config.errorElement=errorElement}scrollToFieldIfNeeded(config.element)}function clearError(fieldName){const config=errorConfigs.get(fieldName);if(!config){logVerbose(`Cannot clear error for unknown field: ${fieldName}`);return}logVerbose(`Clearing error for field: ${fieldName}`);removeClass(config.element,CSS_CLASSES.ERROR_FIELD);if(config.errorElement){config.errorElement.textContent="";removeClass(config.errorElement,CSS_CLASSES.ACTIVE_ERROR)}}function clearAllErrors(){logVerbose("Clearing all field errors");errorConfigs.forEach((config,fieldName)=>{clearError(fieldName)})}function findOrCreateErrorElement(config){if(!config||!config.element){logVerbose("Cannot create error element - no config or element provided");return null}if(!config.element.parentElement){logVerbose(`Cannot create error element for field: ${config.fieldName} - no parent element`,{element:config.element,parentElement:config.element.parentElement,nodeName:config.element.nodeName,id:config.element.id});return null}let errorElement=null;try{errorElement=config.element.parentElement.querySelector(`${SELECTORS.ERROR_DISPLAY}[data-field="${config.fieldName}"]`)}catch(error){logVerbose(`Error finding existing error element for field: ${config.fieldName}`,error);return null}if(!errorElement){try{errorElement=document.createElement("div");errorElement.setAttribute("data-form","error");errorElement.setAttribute("data-field",config.fieldName);const parent=config.element.parentElement;const nextSibling=config.element.nextSibling;if(nextSibling){parent.insertBefore(errorElement,nextSibling)}else{parent.appendChild(errorElement)}logVerbose(`Created error element for field: ${config.fieldName}`)}catch(error){logVerbose(`Error creating error element for field: ${config.fieldName}`,error);return null}}return errorElement}function scrollToFieldIfNeeded(element){const rect=element.getBoundingClientRect();const isVisible2=rect.top>=0&&rect.left>=0&&rect.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&rect.right<=(window.innerWidth||document.documentElement.clientWidth);if(!isVisible2){element.scrollIntoView({behavior:"smooth",block:"center"});logVerbose(`Scrolled to field with error: ${element.name||"unnamed"}`)}}function getErrorState(){const state={};errorStates.forEach((value,key)=>{state[key]={message:value.message}});return state}var initialized2=false;var cleanupFunctions2=[];var fieldValidations=new Map;function initValidation(root=document){if(initialized2){logVerbose("Validation already initialized, cleaning up first");resetValidation()}logVerbose("Initializing form validation");const formInputs=queryAllByAttr("input, select, textarea",root);logVerbose(`Found ${formInputs.length} form inputs`);setupFieldValidations(formInputs);setupValidationListeners(root);initialized2=true;logVerbose("Validation initialization complete")}function setupFieldValidations(inputs){inputs.forEach(input=>{if(!isFormInput(input))return;const htmlInput=input;const fieldName=htmlInput.name||getAttrValue(input,"data-step-field-name");if(!fieldName){logVerbose("Skipping field validation setup - no field name",{element:input,name:htmlInput.name,dataStepFieldName:getAttrValue(input,"data-step-field-name"),id:htmlInput.id,type:htmlInput.type});return}const rules=extractValidationRules(input);if(rules.length===0){logVerbose(`No validation rules found for field: ${fieldName}`);return}fieldValidations.set(fieldName,{element:input,rules,isValid:true});logVerbose(`Validation rules set for field: ${fieldName}`,{rules:rules.map(r=>r.type),rulesCount:rules.length})})}function extractValidationRules(input){const rules=[];if(input.hasAttribute("required")){rules.push({type:"required",message:getAttrValue(input,"data-error-message")||"This field is required"})}if(input instanceof HTMLInputElement&&input.type==="email"){rules.push({type:"email",message:"Please enter a valid email address"})}if(input instanceof HTMLInputElement&&input.type==="tel"){rules.push({type:"phone",message:"Please enter a valid phone number"})}const minLength=getAttrValue(input,"minlength");if(minLength){rules.push({type:"min",value:parseInt(minLength),message:`Minimum ${minLength} characters required`})}const maxLength=getAttrValue(input,"maxlength");if(maxLength){rules.push({type:"max",value:parseInt(maxLength),message:`Maximum ${maxLength} characters allowed`})}const pattern=getAttrValue(input,"pattern");if(pattern){rules.push({type:"pattern",value:new RegExp(pattern),message:"Please enter a valid format"})}return rules}function setupValidationListeners(root){const debouncedValidation=debounce((...args)=>{handleFieldValidation(args[0],args[1])},DEFAULTS.VALIDATION_DELAY);const cleanup1=delegateEvent(root,"input","input, select, textarea",debouncedValidation);const cleanup2=delegateEvent(root,"blur","input, select, textarea",handleFieldValidation);const cleanup3=delegateEvent(root,"change","input, select, textarea",handleFieldValidation);cleanupFunctions2.push(cleanup1,cleanup2,cleanup3)}function handleFieldValidation(event,target){if(!isFormInput(target))return;const htmlTarget=target;const fieldName=htmlTarget.name||getAttrValue(target,"data-step-field-name");if(!fieldName){logVerbose("Skipping validation - no field name found",{element:target,name:htmlTarget.name,dataStepFieldName:getAttrValue(target,"data-step-field-name")});return}const stepElement=target.closest(SELECTORS.STEP);if(stepElement){const stepId=getAttrValue(stepElement,"data-answer");if(stepId&&!FormState.isStepVisible(stepId)){logVerbose(`Skipping validation for field in hidden step: ${fieldName}`);return}}validateField(fieldName)}function validateField(fieldName){const fieldValidation=fieldValidations.get(fieldName);if(!fieldValidation){logVerbose(`No validation rules found for field: ${fieldName}`);return true}const input=fieldValidation.element;if(!input){logVerbose(`No element found for field: ${fieldName}`);return true}const value=getInputValue(input);logVerbose(`Validating field: ${fieldName}`,{value,elementExists:!!input});for(const rule of fieldValidation.rules){const{isValid,message}=validateRule(value,rule);if(!isValid){fieldValidation.isValid=false;fieldValidation.errorMessage=message||"Invalid field";showError(fieldName,fieldValidation.errorMessage);updateFieldVisualState(input,false,fieldValidation.errorMessage);return false}}fieldValidation.isValid=true;clearError(fieldName);updateFieldVisualState(input,true);return true}var VALIDATION_PATTERNS={email:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,phone:/^[\+]?[1-9][\d]{0,15}$/,phoneUS:/^(\+1\s?)?(\([0-9]{3}\)|[0-9]{3})[\s\-]?[0-9]{3}[\s\-]?[0-9]{4}$/,url:/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$/,zipCode:/^\d{5}(-\d{4})?$/,zipCodeCA:/^[A-Za-z]\d[A-Za-z][ -]?\d[A-Za-z]\d$/,creditCard:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$/,ssn:/^\d{3}-?\d{2}-?\d{4}$/,strongPassword:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/};function validateRule(value,rule){switch(rule.type){case"required":return{isValid:Array.isArray(value)?value.length>0:!!value&&String(value).trim()!=="",message:rule.message};case"email":return{isValid:VALIDATION_PATTERNS.email.test(String(value)),message:rule.message||"Please enter a valid email address"};case"phone":const phoneValue=String(value).replace(/[\s\-\(\)]/g,"");const isValidPhone=VALIDATION_PATTERNS.phone.test(phoneValue)||VALIDATION_PATTERNS.phoneUS.test(String(value));return{isValid:isValidPhone,message:rule.message||"Please enter a valid phone number"};case"min":if(typeof rule.value!=="number")return{isValid:true};return{isValid:String(value).length>=rule.value,message:rule.message||`Minimum ${rule.value} characters required`};case"max":if(typeof rule.value!=="number")return{isValid:true};return{isValid:String(value).length<=rule.value,message:rule.message||`Maximum ${rule.value} characters allowed`};case"pattern":if(!(rule.value instanceof RegExp))return{isValid:true};return{isValid:rule.value.test(String(value)),message:rule.message||"Please enter a valid format"};case"custom":if(!rule.validator)return{isValid:true};try{return{isValid:rule.validator(value),message:rule.message||"Invalid value"}}catch(error){logVerbose("Error in custom validator",{error,rule});return{isValid:false,message:"Validation error occurred"}}default:return{isValid:true}}}function updateFieldVisualState(input,isValid,errorMessage){const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(!fieldName)return;if(!isValid){showError(fieldName,errorMessage)}else{clearError(fieldName)}}function validateStep(stepId){const stepElement=queryByAttr(`[data-answer="${stepId}"]`);if(!stepElement){logVerbose(`Step not found with data-answer="${stepId}"`);return true}if(!FormState.isStepVisible(stepId)){logVerbose(`Skipping validation for hidden step: ${stepId}`);return true}logVerbose(`Validating step: ${stepId}`);const inputs=stepElement.querySelectorAll("input, select, textarea");let isStepValid=true;inputs.forEach(input=>{if(!isFormInput(input))return;const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(fieldName){const isFieldValid=validateField(fieldName);if(!isFieldValid){isStepValid=false}}});logVerbose(`Step validation result: ${stepId}`,{isValid:isStepValid});return isStepValid}function validateAllVisibleFields(){logVerbose("Validating all visible fields");let allValid=true;const validationResults={};for(const[fieldName,fieldValidation]of fieldValidations){const stepElement=fieldValidation.element.closest(SELECTORS.STEP);let shouldValidate=true;if(stepElement){const stepId=getAttrValue(stepElement,"data-answer");if(stepId&&!FormState.isStepVisible(stepId)){shouldValidate=false}}if(shouldValidate){const isValid=validateField(fieldName);validationResults[fieldName]=isValid;if(!isValid){allValid=false}}}logVerbose("All visible fields validation complete",{allValid,results:validationResults});return allValid}function clearFieldValidation(fieldName){const fieldValidation=fieldValidations.get(fieldName);if(!fieldValidation)return;fieldValidation.isValid=true;fieldValidation.errorMessage=void 0;updateFieldVisualState(fieldValidation.element,true);logVerbose(`Cleared validation for field: ${fieldName}`)}function clearAllValidation(){logVerbose("Clearing all field validation");fieldValidations.forEach((validation,fieldName)=>{clearFieldValidation(fieldName)})}function getValidationState(){return{initialized:initialized2,fieldValidations:Array.from(fieldValidations.entries()).reduce((acc,[key,value])=>{acc[key]={isValid:value.isValid,errorMessage:value.errorMessage,rules:value.rules.map(r=>r.type)};return acc},{})}}function resetValidation(){logVerbose("Resetting validation");cleanupFunctions2.forEach(cleanup=>cleanup());cleanupFunctions2=[];clearAllValidation();fieldValidations.clear();initialized2=false;logVerbose("Validation reset complete")}var initialized3=false;var cleanupFunctions3=[];var skipRules=new Map;var skipSections=new Map;function initSkip(root=document){if(initialized3){logVerbose("Skip module already initialized, cleaning up first");resetSkip()}logVerbose("Initializing enhanced skip functionality");setupSkipRules(root);setupSkipSections(root);setupSkipListeners(root);initialized3=true;logVerbose("Skip initialization complete",{skipRules:skipRules.size,skipSections:skipSections.size});formEvents.registerModule("skip")}function setupSkipRules(root){const stepsWithSkipRules=queryAllByAttr(SELECTORS.STEP,root);stepsWithSkipRules.forEach(stepElement=>{const stepId=getAttrValue(stepElement,"data-answer");if(!stepId)return;const skipIf=getAttrValue(stepElement,"data-skip-if");const skipUnless=getAttrValue(stepElement,"data-skip-unless");const skipTo=getAttrValue(stepElement,"data-skip-to");const skipReason=getAttrValue(stepElement,"data-skip-reason");const allowUndo=getAttrValue(stepElement,"data-allow-skip-undo")!=="false";if(skipIf||skipUnless){const condition=skipIf||`!(${skipUnless})`;const skipRule={stepId,condition,targetStep:skipTo||void 0,reason:skipReason||"Conditional skip",allowUndo,clearFields:true};skipRules.set(stepId,skipRule);logVerbose(`Skip rule configured for step: ${stepId}`,{condition,targetStep:skipTo,reason:skipReason})}})}function setupSkipSections(root){const sectionsWithSkip=queryAllByAttr(SELECTORS.SKIP_SECTION,root);sectionsWithSkip.forEach(sectionElement=>{const sectionId=getAttrValue(sectionElement,"data-skip-section");if(!sectionId)return;const condition=getAttrValue(sectionElement,"data-skip-if");const reason=getAttrValue(sectionElement,"data-skip-reason");const stepsInSection=sectionElement.querySelectorAll(SELECTORS.STEP);const stepIds=[];stepsInSection.forEach(stepElement=>{const stepId=getAttrValue(stepElement,"data-answer");if(stepId){stepIds.push(stepId)}});if(stepIds.length>0){const skipSection={sectionId,steps:stepIds,condition:condition||void 0,reason:reason||`Section skip: ${sectionId}`};skipSections.set(sectionId,skipSection);logVerbose(`Skip section configured: ${sectionId}`,{steps:stepIds.length,condition,reason})}})}function setupSkipListeners(root){const cleanup1=delegateEvent(root,"click",SELECTORS.SKIP,handleSkipButtonClick);cleanupFunctions3.push(cleanup1)}function handleSkipButtonClick(event,target){event.preventDefault();console.log("\u{1F518} [Skip v2.1] Button clicked - NEW VALIDATION ACTIVE",{element:target,tagName:target.tagName,className:target.className,id:target.id,version:"NEW_SKIP_VALIDATION_2024_v2.1",timestamp:new Date().toISOString()});if(!initialized3){console.error("\u274C [Skip v2.1] Module not initialized, ignoring skip button click",{target,initialized:initialized3,skipRulesCount:skipRules.size,skipSectionsCount:skipSections.size});return}const dataSkip=getAttrValue(target,"data-skip");const dataSkipReason=getAttrValue(target,"data-skip-reason");const dataAllowUndo=getAttrValue(target,"data-allow-skip-undo");console.log("\u{1F4CB} [Skip v2.1] Data attributes analysis:",{"data-skip":dataSkip,"data-skip-reason":dataSkipReason,"data-allow-skip-undo":dataAllowUndo,allAttributes:Array.from(target.attributes).map(attr=>({name:attr.name,value:attr.value}))});if(!dataSkip||dataSkip==="true"||dataSkip===""){console.error("\u274C [Skip v2.0] Invalid data-skip value - must specify target step",{dataSkip,isEmpty:dataSkip==="",isTrue:dataSkip==="true",isNull:dataSkip===null,isUndefined:dataSkip===void 0,requirement:"data-skip must contain a value that matches an existing data-answer"});return}const targetElement=document.querySelector(`[data-answer="${dataSkip}"]`);const allAnswerElements=document.querySelectorAll("[data-answer]");const allAnswerValues=Array.from(allAnswerElements).map(el=>getAttrValue(el,"data-answer"));console.log("\u{1F50D} [Skip v2.0] Target step verification:",{targetStep:dataSkip,targetElementExists:!!targetElement,targetElement:targetElement?{tagName:targetElement.tagName,id:targetElement.id,className:targetElement.className,dataAnswer:getAttrValue(targetElement,"data-answer"),isVisible:targetElement instanceof HTMLElement?isVisible(targetElement):false,hasContent:targetElement.children.length>0||targetElement.innerHTML.trim()!=="",innerHTML:targetElement.innerHTML.length>0?`${targetElement.innerHTML.substring(0,100)}...`:"EMPTY"}:null,availableSteps:allAnswerValues,totalStepsWithDataAnswer:allAnswerElements.length,searchQuery:`[data-answer="${dataSkip}"]`});if(!targetElement){console.error("\u274C [Skip v2.0] Target step not found in DOM! Skip operation cancelled.",{searchedFor:dataSkip,availableSteps:allAnswerValues,suggestion:`Check if element with data-answer="${dataSkip}" exists`,possibleMatches:allAnswerValues.filter(val=>val&&val.includes(dataSkip)),fix:`Ensure your skip button data-skip="${dataSkip}" matches an existing data-answer="${dataSkip}"`});return}if(targetElement.children.length===0&&targetElement.innerHTML.trim()===""){console.warn("\u26A0\uFE0F [Skip v2.0] Target step appears to be empty - this may cause blank step issue!",{targetStepId:dataSkip,targetElement:{tagName:targetElement.tagName,id:targetElement.id,className:targetElement.className,innerHTML:targetElement.innerHTML,textContent:targetElement.textContent,childrenCount:targetElement.children.length},possibleIssue:"This step may be a blank wrapper without content"})}const currentStepId=FormState.getCurrentStep();if(!currentStepId){console.error("\u274C [Skip v2.0] No current step found for skip operation",{formState:FormState.getDebugInfo(),branchPath:FormState.getBranchPath(),allSteps:FormState.getAllSteps()});return}const skipReason=dataSkipReason||"User skipped";const allowUndo=dataAllowUndo!=="false";console.log("\u{1F3AF} [Skip v2.0] Processing valid skip request:",{currentStepId,targetStepId:dataSkip,skipReason,allowUndo,targetExists:true,targetHasContent:targetElement.children.length>0||targetElement.innerHTML.trim()!==""});console.log("\u{1F680} [Skip v2.0] Emitting skip:request event:",{targetStepId:dataSkip,currentStep:currentStepId,reason:skipReason,allowUndo});formEvents.emit("skip:request",{targetStepId:dataSkip});console.log("\u2705 [Skip v2.0] Skip request emitted successfully")}function skipStep(stepId,reason,allowUndo=true,targetStep){if(!initialized3){logVerbose("Skip module not initialized, cannot skip step");return false}if(!stepId){logVerbose("Invalid stepId provided to skipStep");return false}logVerbose("=== SKIP STEP FUNCTION START ===");logVerbose(`Attempting to skip step: ${stepId}`,{reason,allowUndo,targetStep});if(FormState.isStepSkipped(stepId)){logVerbose(`Step already skipped: ${stepId}`);return false}FormState.addSkippedStep(stepId,reason,allowUndo);const clearedFields=clearStepFields(stepId);applySkipStyling(stepId,true);logVerbose(`Step ${stepId} skipped successfully`,{reason,allowUndo,targetStep,clearedFields});return true}function clearStepFields(stepId){const clearedFields=[];const stepElement=document.querySelector(`[data-answer="${stepId}"]`);if(!stepElement){logVerbose(`Cannot clear fields - step element not found for ${stepId}`);return[]}const fields=stepElement.querySelectorAll(SELECTORS.ALL_INPUTS);fields.forEach(field=>{const input=field;const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(fieldName){FormState.clearFields([fieldName]);clearFieldValidation(fieldName);if(input.type==="radio"||input.type==="checkbox"){input.checked=false}else{input.value=""}clearedFields.push(fieldName)}});logVerbose(`Cleared ${clearedFields.length} fields in step ${stepId}`,{clearedFields});return clearedFields}function applySkipStyling(stepId,isSkipped){const stepElement=document.querySelector(`[data-answer="${stepId}"]`);if(!stepElement)return;if(isSkipped){addClass(stepElement,CSS_CLASSES.SKIPPED_STEP);removeClass(stepElement,CSS_CLASSES.SKIP_AVAILABLE)}else{removeClass(stepElement,CSS_CLASSES.SKIPPED_STEP);addClass(stepElement,CSS_CLASSES.SKIP_AVAILABLE)}}function getSkipState(){return{initialized:initialized3,skipRules:Array.from(skipRules.entries()).map(([id,rule])=>({stepId:id,condition:rule.condition,targetStep:rule.targetStep,reason:rule.reason,allowUndo:rule.allowUndo,clearFields:rule.clearFields})),skipSections:Array.from(skipSections.entries()).map(([id,section])=>({sectionId:id,steps:section.steps,condition:section.condition,reason:section.reason})),currentSkipStats:FormState.getSkipStats(),skippedSteps:FormState.getSkippedSteps(),skipHistory:FormState.getSkipHistory()}}function resetSkip(){if(!initialized3){logVerbose("Skip module not initialized, nothing to reset");return}logVerbose("Resetting skip functionality");formEvents.unregisterModule("skip");cleanupFunctions3.forEach(cleanup=>cleanup());cleanupFunctions3=[];skipRules.clear();skipSections.clear();FormState.clearSkipHistory();initialized3=false;logVerbose("Skip reset complete")}var initialized4=false;var cleanupFunctions4=[];var eventCleanupFunctions=[];var steps=[];var stepItems=[];var currentStepIndex=-1;var currentStepItemId=null;function initMultiStep(root=document){if(initialized4){logVerbose("MultiStep already initialized, cleaning up first");resetMultiStep()}logVerbose("Initializing multi-step navigation with step/step_item architecture");const stepElements=queryAllByAttr(SELECTORS.STEP,root);steps=Array.from(stepElements).map((stepElement,index)=>{console.log(`\u{1F50D} [MultiStep] Processing step ${index}:`,{element:stepElement,tagName:stepElement.tagName,id:stepElement.id,className:stepElement.className,hasDataForm:stepElement.hasAttribute("data-form"),dataFormValue:getAttrValue(stepElement,"data-form")});const stepWrapper=stepElement.querySelector(".step_wrapper[data-answer]");let dataAnswer=null;if(stepWrapper){dataAnswer=getAttrValue(stepWrapper,"data-answer");console.log(`\u{1F4CB} [MultiStep] Found step_wrapper with data-answer:`,{stepIndex:index,dataAnswer,stepWrapper:{tagName:stepWrapper.tagName,id:stepWrapper.id,className:stepWrapper.className}})}else{console.log(`\u2139\uFE0F [MultiStep] No step_wrapper found, checking step element directly`);dataAnswer=getAttrValue(stepElement,"data-answer");if(dataAnswer){console.log(`\u{1F4CB} [MultiStep] Found data-answer on step element:`,{stepIndex:index,dataAnswer})}}const expectedValue=`step-${index}`;console.log(`\u{1F3AF} [MultiStep] Step ${index} validation:`,{expected:expectedValue,found:dataAnswer||"MISSING",isValid:!!dataAnswer,matches:dataAnswer===expectedValue});if(!dataAnswer){console.error(`\u274C [MultiStep] STEP INITIALIZATION ERROR:`,{stepIndex:index,error:`Step ${index} is missing required data-answer attribute`,stepElement:{tagName:stepElement.tagName,id:stepElement.id,className:stepElement.className,hasStepWrapper:!!stepWrapper,innerHTML:stepElement.innerHTML.substring(0,200)+"..."},expectedDataAnswer:expectedValue,solution:`Add data-answer="${expectedValue}" to step_wrapper or step element`,examples:{stepWrapper:`<div class="step_wrapper" data-answer="${expectedValue}">`,stepElement:`<div data-form="step" data-answer="${expectedValue}">`},troubleshooting:{checkStepWrapper:`element.querySelector('.step_wrapper[data-answer]')`,checkStepElement:`element.getAttribute('data-answer')`,allDataAnswers:`Array.from(document.querySelectorAll('[data-answer]')).map(el => el.getAttribute('data-answer'))`}});return null}const stepInfo={element:stepElement,id:dataAnswer,index,type:getAttrValue(stepElement,"data-step-type")||void 0,subtype:getAttrValue(stepElement,"data-step-subtype")||void 0,number:getAttrValue(stepElement,"data-step-number")||void 0,isStepItem:false};console.log(`\u2705 [MultiStep] Step ${index} initialized successfully:`,{stepId:dataAnswer,stepInfo:{id:stepInfo.id,type:stepInfo.type,subtype:stepInfo.subtype,number:stepInfo.number}});FormState.setStepInfo(dataAnswer,{type:stepInfo.type,subtype:stepInfo.subtype,number:stepInfo.number,visible:false,visited:false});return stepInfo}).filter(step=>step!==null);steps.forEach((step,index)=>{step.index=index});const stepItemElements=document.querySelectorAll(".step_item");console.log(`\u{1F33F} [MultiStep] Found ${stepItemElements.length} step_items for branching logic`);stepItems=Array.from(stepItemElements).map((stepItemElement,index)=>{console.log(`\u{1F50D} [MultiStep] Processing step_item ${index}:`,{element:stepItemElement,tagName:stepItemElement.tagName,id:stepItemElement.id,className:stepItemElement.className,hasDataAnswer:stepItemElement.hasAttribute("data-answer"),dataAnswer:getAttrValue(stepItemElement,"data-answer")});const dataAnswer=getAttrValue(stepItemElement,"data-answer");if(!dataAnswer){console.error(`\u274C [MultiStep] STEP_ITEM INITIALIZATION ERROR:`,{stepItemIndex:index,error:`Step_item ${index} is missing required data-answer attribute`,stepItemElement:{tagName:stepItemElement.tagName,id:stepItemElement.id,className:stepItemElement.className,innerHTML:stepItemElement.innerHTML.substring(0,200)+"..."},solution:`Add data-answer attribute to step_item element`,example:`<div class="step_item" data-answer="some-unique-id">`,troubleshooting:{checkElement:`element.getAttribute('data-answer')`,allDataAnswers:`Array.from(document.querySelectorAll('[data-answer]')).map(el => el.getAttribute('data-answer'))`}});return null}const parentStepElement=stepItemElement.closest('[data-form="step"]');let parentStepIndex;if(parentStepElement){parentStepIndex=Array.from(stepElements).indexOf(parentStepElement);console.log(`\u{1F517} [MultiStep] Found parent step for step_item:`,{stepItemId:dataAnswer,parentStepIndex,parentStepId:parentStepIndex!==-1?steps[parentStepIndex]?.id:"NOT_FOUND",parentElement:{tagName:parentStepElement.tagName,id:parentStepElement.id,className:parentStepElement.className}})}else{console.warn(`\u26A0\uFE0F [MultiStep] No parent step found for step_item:`,{stepItemId:dataAnswer,stepItemIndex:index,warning:'step_item should be nested within a [data-form="step"] element',suggestion:"Check DOM structure - step_item should be inside a step element"})}const stepItemInfo={element:stepItemElement,id:dataAnswer,index,type:getAttrValue(stepItemElement,"data-step-type")||void 0,subtype:getAttrValue(stepItemElement,"data-step-subtype")||void 0,number:getAttrValue(stepItemElement,"data-step-number")||void 0,isStepItem:true,parentStepIndex:parentStepIndex!==-1?parentStepIndex:void 0};console.log(`\u2705 [MultiStep] Step_item ${index} initialized successfully:`,{stepItemId:dataAnswer,stepItemInfo:{id:stepItemInfo.id,type:stepItemInfo.type,subtype:stepItemInfo.subtype,number:stepItemInfo.number,parentStepIndex:stepItemInfo.parentStepIndex,parentStepId:stepItemInfo.parentStepIndex!==void 0?steps[stepItemInfo.parentStepIndex]?.id:void 0}});FormState.setStepInfo(dataAnswer,{type:stepItemInfo.type,subtype:stepItemInfo.subtype,number:stepItemInfo.number,visible:false,visited:false});return stepItemInfo}).filter(stepItem=>stepItem!==null);logVerbose("Starting to hide all steps initially",{totalSteps:steps.length,totalStepItems:stepItems.length});steps.forEach((step,index)=>{logVerbose(`Hiding step ${index} (${step.id})`,{element:step.element,tagName:step.element.tagName,id:step.element.id,className:step.element.className,beforeHide:{display:step.element.style.display,visibility:step.element.style.visibility,computedDisplay:getComputedStyle(step.element).display,isVisible:isVisible(step.element)}});hideElement(step.element);logVerbose(`Step ${index} hidden`,{afterHide:{display:step.element.style.display,visibility:step.element.style.visibility,computedDisplay:getComputedStyle(step.element).display,isVisible:isVisible(step.element)}})});stepItems.forEach((stepItem,index)=>{logVerbose(`Hiding stepItem ${index} (${stepItem.id})`);hideElement(stepItem.element)});logVerbose("Finished hiding all steps and step items");setupNavigationListeners(root);setupEventListeners();initSkip(root);if(steps.length>0){const multistepElement=root.querySelector(SELECTORS.MULTISTEP);const startStepAttr=multistepElement?getAttrValue(multistepElement,"data-start-step"):null;const startStepId=startStepAttr||steps[0].id;const startIndex=findStepIndexById(startStepId);goToStep(startIndex!==-1?startIndex:0)}else{logVerbose("No steps found to initialize")}initialized4=true;logVerbose("Multi-step initialization complete");formEvents.registerModule("multiStep")}function setupEventListeners(){const branchChangeCleanup=formEvents.on("branch:change",({targetStepId})=>{logVerbose(`Received branch:change event, navigating to: ${targetStepId}`);goToStepById(targetStepId)});const skipRequestCleanup=formEvents.on("skip:request",({targetStepId})=>{console.log("\u{1F3AF} [MultiStep] Received skip:request event",{targetStepId,currentStepId:FormState.getCurrentStep(),hasTargetStep:!!targetStepId});const currentStepId=FormState.getCurrentStep();if(!currentStepId){console.error("\u274C [MultiStep] No current step found for skip operation");return}if(currentStepId){skipStep(currentStepId,"User skipped",true,targetStepId||void 0)}if(targetStepId){console.log("\u{1F680} [MultiStep] Navigating to target step:",targetStepId);goToStepById(targetStepId)}else{console.error("\u274C [MultiStep] No target step provided in skip:request - this should not happen with the new validation")}});eventCleanupFunctions.push(branchChangeCleanup,skipRequestCleanup)}function updateRequiredFields(stepItemElement,enable=true){const subtype=getAttrValue(stepItemElement,"data-step-subtype");if(!subtype)return;logVerbose(`${enable?"Enabling":"Disabling"} required fields for subtype: ${subtype}`);const conditionalFields=stepItemElement.querySelectorAll("[data-require-for-subtypes]");conditionalFields.forEach(field=>{const requiredForSubtypes=field.getAttribute("data-require-for-subtypes");const htmlField=field;if(requiredForSubtypes&&requiredForSubtypes.split(",").map(s=>s.trim()).includes(subtype)){if(enable){htmlField.required=true;htmlField.disabled=false}else{htmlField.required=false;htmlField.disabled=true;htmlField.value=""}}})}function showStepItem(stepItemId){logVerbose(`Attempting to show step_item: ${stepItemId}`);const stepItem=stepItems.find(item=>item.id===stepItemId);if(!stepItem){const stepItemByAnswer=stepItems.find(item=>getAttrValue(item.element,"data-answer")===stepItemId);if(stepItemByAnswer){logVerbose(`Found step_item by data-answer: ${stepItemId}`);return showStepItem(stepItemByAnswer.id)}logVerbose(`Step item not found: ${stepItemId}`);return}const parentStep=steps[stepItem.parentStepIndex];if(!parentStep){logVerbose(`Parent step not found for step_item: ${stepItemId}`);return}logVerbose(`Showing step_item ${stepItemId} in parent step ${stepItem.parentStepIndex}`);const allStepItemsInParent=stepItems.filter(item=>item.parentStepIndex===stepItem.parentStepIndex);allStepItemsInParent.forEach(item=>{hideElement(item.element);updateRequiredFields(item.element,false);FormState.setStepVisibility(item.id,false)});showElement(stepItem.element);let parentElement=stepItem.element.parentElement;while(parentElement&&!parentElement.classList.contains("multi-form_step")){if(parentElement.classList.contains("step_wrapper")){parentElement.style.display="";parentElement.style.visibility="";removeClass(parentElement,"hidden-step");removeClass(parentElement,"hidden-step-item")}parentElement=parentElement.parentElement}updateRequiredFields(stepItem.element,true);FormState.setStepVisibility(stepItemId,true);FormState.setStepInfo(stepItemId,{visited:true});currentStepItemId=stepItemId;logVerbose(`Successfully showed step_item: ${stepItemId}`)}function setupNavigationListeners(root){const cleanup1=delegateEvent(root,"click",SELECTORS.NEXT_BTN,handleNextClick);const cleanup2=delegateEvent(root,"click",SELECTORS.BACK_BTN,handleBackClick);const cleanup3=delegateEvent(root,"click",SELECTORS.SUBMIT_BTN,handleSubmitClick);cleanupFunctions4.push(cleanup1,cleanup2,cleanup3);logVerbose("Navigation listeners setup complete (skip handling delegated to skip module)")}function handleNextClick(event){console.log("\u{1F50D} NEXT BUTTON CLICK HANDLER TRIGGERED");console.log("Event target:",event.target);console.log("Event currentTarget:",event.currentTarget);const target=event.target;const skipAttribute=target.getAttribute("data-skip");if(skipAttribute){console.log("\u274C CONFLICT DETECTED: Skip button triggered next button handler!",{skipAttribute,targetElement:target,targetTagName:target.tagName,targetClassName:target.className});return}console.log("\u2705 Legitimate next button click - proceeding with navigation");event.preventDefault();goToNextStep()}function handleBackClick(event){event.preventDefault();goToPreviousStep()}function handleSubmitClick(event){const form=event.target.closest("form");if(!form){logVerbose("Form not found, preventing submission");return}const isFormValid=validateAllVisibleSteps();if(!isFormValid){event.preventDefault();logVerbose("Form validation failed, preventing submission");return}logVerbose("Form validation passed, allowing submission")}function goToStepById(stepId){if(!initialized4){console.error("\u274C [MultiStep] Module not initialized, ignoring goToStepById call",{stepId,initialized:initialized4,totalSteps:steps.length,totalStepItems:stepItems.length});return}console.log("\u{1F3AF} [MultiStep] Navigation request received:",{targetStepId:stepId,currentStepIndex,currentStepId:FormState.getCurrentStep(),totalSteps:steps.length,totalStepItems:stepItems.length});const allStepIds=steps.map(s=>s.id);const allStepItemIds=stepItems.map(s=>s.id);console.log("\u{1F4CB} [MultiStep] Available navigation targets:",{searchingFor:stepId,parentStepIds:allStepIds,branchingStepItemIds:allStepItemIds,totalParentSteps:steps.length,totalBranchingItems:stepItems.length});const stepItem=stepItems.find(item=>item.id===stepId);if(stepItem){console.log("\u2705 [MultiStep] Found as branching step_item:",{stepItemId:stepId,parentStepIndex:stepItem.parentStepIndex,stepItemIndex:stepItem.index,stepItemElement:{tagName:stepItem.element.tagName,id:stepItem.element.id,className:stepItem.element.className,dataAnswer:getAttrValue(stepItem.element,"data-answer"),isVisible:isVisible(stepItem.element),parentStep:stepItem.parentStepIndex!==void 0?steps[stepItem.parentStepIndex]?.id:"unknown"}});if(stepItem.parentStepIndex!==void 0){const parentStep=steps[stepItem.parentStepIndex];if(!parentStep){console.error("\u274C [MultiStep] Parent step not found for step_item!",{stepItemId:stepId,parentStepIndex:stepItem.parentStepIndex,availableSteps:allStepIds,totalSteps:steps.length});return}console.log("\u{1F504} [MultiStep] Navigating to parent step first:",{parentStepId:parentStep.id,parentStepIndex:stepItem.parentStepIndex,currentStepIndex});goToStep(stepItem.parentStepIndex);console.log("\u{1F33F} [MultiStep] Showing branching option:",{stepItemId:stepId,withinParentStep:parentStep.id});showStepItem(stepId)}console.log("\u2705 [MultiStep] Successfully navigated to step_item:",stepId);return}else{console.log("\u2139\uFE0F [MultiStep] Not found in branching step_items, checking regular steps")}const parentStepIndex=findStepIndexById(stepId);console.log("\u{1F50D} [MultiStep] Regular step search result:",{stepId,foundIndex:parentStepIndex,isValidIndex:parentStepIndex!==-1,searchMethod:"findStepIndexById"});if(parentStepIndex!==-1){const targetStep=steps[parentStepIndex];console.log("\u2705 [MultiStep] Found as regular step:",{stepId,stepIndex:parentStepIndex,stepElement:{tagName:targetStep.element.tagName,id:targetStep.element.id,className:targetStep.element.className,dataAnswer:getAttrValue(targetStep.element,"data-answer"),isVisible:isVisible(targetStep.element)}});currentStepItemId=null;console.log("\u{1F680} [MultiStep] Calling goToStep with index:",{stepIndex:parentStepIndex,stepId:targetStep.id});goToStep(parentStepIndex);console.log("\u2705 [MultiStep] Successfully navigated to regular step:",stepId);return}console.error("\u274C [MultiStep] STEP NOT FOUND:",{searchedFor:stepId,searchedIn:"both regular steps and branching step_items",availableRegularSteps:allStepIds,availableBranchingItems:allStepItemIds,totalElements:{steps:steps.length,stepItems:stepItems.length},suggestion:`Check if element with data-answer="${stepId}" exists in DOM`,troubleshooting:{checkDataAnswer:`document.querySelector('[data-answer="${stepId}"]')`,listAllDataAnswers:`Array.from(document.querySelectorAll('[data-answer]')).map(el => el.getAttribute('data-answer'))`}});const domElement=document.querySelector(`[data-answer="${stepId}"]`);if(domElement){console.error("\u{1F50D} [MultiStep] Step exists in DOM but not registered!",{stepId,domElement:{tagName:domElement.tagName,id:domElement.id,className:domElement.className,dataAnswer:getAttrValue(domElement,"data-answer"),hasStepAttribute:domElement.hasAttribute("data-form"),stepAttribute:getAttrValue(domElement,"data-form"),isVisible:domElement instanceof HTMLElement?isVisible(domElement):false},possibleCause:"Element exists but was not properly initialized during module setup"})}}function validateStepElement(element){const inputs=element.querySelectorAll("input[required], select[required], textarea[required]");for(const input of inputs){const htmlInput=input;if(!isVisible(htmlInput))continue;if(!htmlInput.value||htmlInput.value.trim()===""){logVerbose("Validation failed: empty required field",{element:htmlInput,name:htmlInput.name,id:htmlInput.id});htmlInput.focus();return false}if(htmlInput.type==="email"&&htmlInput.value){const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(htmlInput.value)){logVerbose("Validation failed: invalid email format");htmlInput.focus();return false}}}return true}function goToStep(stepIndex){if(!initialized4){logVerbose("Multi-step module not initialized, ignoring goToStep call");return}console.log("\u{1F3AF} [STEP NAVIGATION] Starting goToStep:",{requestedIndex:stepIndex,currentIndex:currentStepIndex,totalSteps:steps.length,stepExists:stepIndex>=0&&stepIndex<steps.length});if(stepIndex<0||stepIndex>=steps.length){console.error("\u274C [STEP NAVIGATION] Invalid step index:",{requestedIndex:stepIndex,validRange:`0 to ${steps.length-1}`,totalSteps:steps.length,availableStepIds:steps.map(s=>s.id)});return}const targetStep=steps[stepIndex];console.log("\u{1F4CB} [STEP NAVIGATION] Target step details:",{stepIndex,stepId:targetStep.id,element:{tagName:targetStep.element.tagName,id:targetStep.element.id,className:targetStep.element.className,dataAnswer:getAttrValue(targetStep.element,"data-answer"),innerHTML:targetStep.element.innerHTML.length>0?`${targetStep.element.innerHTML.substring(0,100)}...`:"EMPTY",hasContent:targetStep.element.children.length>0,childrenCount:targetStep.element.children.length},visibility:{isVisible:isVisible(targetStep.element),display:getComputedStyle(targetStep.element).display,visibility:getComputedStyle(targetStep.element).visibility,opacity:getComputedStyle(targetStep.element).opacity,hasHiddenClass:targetStep.element.classList.contains("hidden-step")}});if(targetStep.element.children.length===0&&targetStep.element.innerHTML.trim()===""){console.warn("\u26A0\uFE0F [STEP NAVIGATION] Target step appears to be empty!",{stepId:targetStep.id,stepIndex,innerHTML:targetStep.element.innerHTML,textContent:targetStep.element.textContent,childrenCount:targetStep.element.children.length,possibleIssue:"This step may be a blank wrapper"})}logVerbose(`Attempting to go to step index: ${stepIndex}`);if(currentStepIndex!==-1){const currentStep=steps[currentStepIndex];console.log("\u{1F44B} [STEP NAVIGATION] Hiding current step:",{currentIndex:currentStepIndex,currentStepId:currentStep.id,beforeHide:{isVisible:isVisible(currentStep.element),display:getComputedStyle(currentStep.element).display}});hideStep(currentStepIndex);console.log("\u2705 [STEP NAVIGATION] Current step hidden:",{stepId:currentStep.id,afterHide:{isVisible:isVisible(currentStep.element),display:getComputedStyle(currentStep.element).display}})}console.log("\u{1F441}\uFE0F [STEP NAVIGATION] Showing target step:",{stepIndex,stepId:targetStep.id,beforeShow:{isVisible:isVisible(targetStep.element),display:getComputedStyle(targetStep.element).display,hasHiddenClass:targetStep.element.classList.contains("hidden-step")}});showStep(stepIndex);console.log("\u2705 [STEP NAVIGATION] Target step shown:",{stepId:targetStep.id,afterShow:{isVisible:isVisible(targetStep.element),display:getComputedStyle(targetStep.element).display,hasHiddenClass:targetStep.element.classList.contains("hidden-step"),actuallyVisible:targetStep.element.offsetHeight>0&&targetStep.element.offsetWidth>0}});currentStepIndex=stepIndex;FormState.setCurrentStep(targetStep.id);updateNavigationButtons();console.log("\u{1F389} [STEP NAVIGATION] Navigation complete:",{newCurrentIndex:currentStepIndex,newCurrentStepId:targetStep.id,formStateCurrentStep:FormState.getCurrentStep(),stepIsVisibleInDOM:isVisible(targetStep.element),stepHasContent:targetStep.element.children.length>0||targetStep.element.innerHTML.trim()!==""});logVerbose(`Successfully navigated to step ${stepIndex} (${targetStep.id})`)}function showStep(stepIndex){if(stepIndex<0||stepIndex>=steps.length){logVerbose(`Invalid step index: ${stepIndex}`);return}const step=steps[stepIndex];if(!step){logVerbose(`Step not found at index: ${stepIndex}`);return}console.log(`\u{1F504} [MultiStep] Showing step ${stepIndex}:`,{stepId:step.id,stepIndex,element:{tagName:step.element.tagName,id:step.element.id,className:step.element.className}});steps.forEach((s,i)=>{if(i!==stepIndex){hideStep(i);s.element.classList.remove("active-step")}});showElement(step.element);step.element.classList.add("active-step");FormState.setStepVisibility(step.id,true);FormState.setStepInfo(step.id,{visited:true});currentStepIndex=stepIndex;FormState.setCurrentStep(step.id);updateNavigationButtons();formEvents.emit("step:change",{currentStepIndex:stepIndex,currentStepId:step.id});console.log(`\u2705 [MultiStep] Step ${stepIndex} (${step.id}) is now visible:`,{isVisible:isVisible(step.element),hasActiveClass:step.element.classList.contains("active-step"),formStateVisible:FormState.isStepVisible(step.id),computedDisplay:getComputedStyle(step.element).display,computedVisibility:getComputedStyle(step.element).visibility});if(!isVisible(step.element)){console.error(`\u274C [MultiStep] Step ${stepIndex} (${step.id}) is still not visible after showElement!`);diagnoseVisibilityIssues(step.element,step.id)}}function hideStep(stepIndex){if(stepIndex<0||stepIndex>=steps.length){return}const step=steps[stepIndex];console.log(`\u{1F504} [MultiStep] Hiding step ${stepIndex}:`,{stepId:step.id,stepIndex,element:{tagName:step.element.tagName,id:step.element.id,className:step.element.className,hadActiveClass:step.element.classList.contains("active-step")}});hideElement(step.element);step.element.classList.remove("active-step");FormState.setStepVisibility(step.id,false);stepItems.forEach(item=>{if(item.parentStepIndex===stepIndex){hideElement(item.element);FormState.setStepVisibility(item.id,false)}});console.log(`\u2705 [MultiStep] Step ${stepIndex} (${step.id}) is now hidden:`,{isVisible:isVisible(step.element),hasActiveClass:step.element.classList.contains("active-step"),formStateVisible:FormState.isStepVisible(step.id),computedDisplay:getComputedStyle(step.element).display,computedVisibility:getComputedStyle(step.element).visibility})}function goToNextStep(){if(!initialized4){logVerbose("Multi-step module not initialized, ignoring goToNextStep call");return}logVerbose("=== GO TO NEXT STEP FUNCTION START ===");console.log("\u{1F50D} GO TO NEXT STEP CALLED");console.trace("Call stack for goToNextStep:");const currentStep=getCurrentStep();if(!currentStep){logVerbose("No current step found");return}logVerbose("Current step info",{stepId:currentStep.id,stepIndex:currentStepIndex,stepElement:{tagName:currentStep.element.tagName,id:currentStep.element.id,className:currentStep.element.className}});logVerbose("Evaluating skip conditions...");const nextIndex=currentStepIndex+1;console.log(`\u{1F50D} ATTEMPTING TO NAVIGATE TO NEXT STEP - Current: ${currentStepIndex}, Next: ${nextIndex}`);logVerbose("Sequential navigation logic",{currentIndex:currentStepIndex,nextIndex,totalSteps:steps.length,hasNextStep:nextIndex<steps.length});if(nextIndex<steps.length){logVerbose(`Going to next sequential step: index ${nextIndex}`);goToStep(nextIndex)}else{logVerbose("Already at last step")}logVerbose("=== GO TO NEXT STEP FUNCTION END ===")}function goToPreviousStep(){const previousStepId=FormState.goToPreviousStep();if(previousStepId){const previousIndex2=findStepIndexById(previousStepId);if(previousIndex2!==-1){goToStep(previousIndex2);return}}const previousIndex=currentStepIndex-1;if(previousIndex>=0){goToStep(previousIndex)}else{logVerbose("Already at first step")}}function findStepIndexById(stepId){return steps.findIndex(step=>step.id===stepId)}function getCurrentStep(){return steps[currentStepIndex]||null}function updateNavigationButtons(){const nextBtn=document.querySelector(SELECTORS.NEXT_BTN);const backBtn=document.querySelector(SELECTORS.BACK_BTN);const submitBtn=document.querySelector(SELECTORS.SUBMIT_BTN);if(!nextBtn||!backBtn||!submitBtn)return;const isFirstStep=currentStepIndex===0;const isLastStep=currentStepIndex===steps.length-1;backBtn.style.display=isFirstStep?"none":"";if(isLastStep){nextBtn.style.display="none";submitBtn.style.display=""}else{nextBtn.style.display="";submitBtn.style.display="none"}}function validateAllVisibleSteps(){for(const step of steps){if(FormState.isStepVisible(step.id)){if(!validateStepElement(step.element)){return false}}}return true}function getCurrentStepInfo(){const currentStep=getCurrentStep();return{step:currentStep,index:currentStepIndex,totalSteps:steps.length,isFirstStep:currentStepIndex===0,isLastStep:currentStepIndex===steps.length-1}}function resetMultiStep(){if(!initialized4){logVerbose("Multi-step module not initialized, nothing to reset");return}logVerbose("Resetting multi-step module");formEvents.unregisterModule("multiStep");cleanupFunctions4.forEach(fn=>fn());cleanupFunctions4=[];steps=[];stepItems=[];currentStepIndex=-1;currentStepItemId=null;initialized4=false;resetSkip();eventCleanupFunctions.forEach(fn=>fn());eventCleanupFunctions=[];logVerbose("Multi-step module reset")}function getMultiStepState(){return{initialized:initialized4,currentStepIndex,totalSteps:steps.length,steps:steps.map(step=>({id:step.id,index:step.index,visible:isVisible(step.element),type:step.type,subtype:step.subtype,number:step.number}))}}function diagnoseVisibilityIssues(element,stepId){const computedStyle=getComputedStyle(element);const parentElements=[];let currentElement=element;while(currentElement&&currentElement!==document.body){parentElements.push(currentElement);currentElement=currentElement.parentElement}console.log(`\u{1F50D} [MultiStep] Diagnosing visibility issues for step ${stepId}:`,{targetElement:{tagName:element.tagName,id:element.id,className:element.className,computedDisplay:computedStyle.display,computedVisibility:computedStyle.visibility,computedOpacity:computedStyle.opacity,inlineDisplay:element.style.display,inlineVisibility:element.style.visibility,inlineOpacity:element.style.opacity,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)},parentChain:parentElements.map(el=>({tagName:el.tagName,id:el.id,className:el.className,computedDisplay:getComputedStyle(el).display,computedVisibility:getComputedStyle(el).visibility,computedOpacity:getComputedStyle(el).opacity,hasHiddenClass:el.classList.contains("hidden-step")})),possibleConflicts:{hasDisplayNone:computedStyle.display==="none",hasVisibilityHidden:computedStyle.visibility==="hidden",hasZeroOpacity:computedStyle.opacity==="0",hasHiddenClass:element.classList.contains("hidden-step"),parentWithDisplayNone:parentElements.some(el=>getComputedStyle(el).display==="none"),parentWithVisibilityHidden:parentElements.some(el=>getComputedStyle(el).visibility==="hidden")}})}var initialized5=false;var cleanupFunctions5=[];var summaryFields=[];function initSummary(root=document){if(initialized5){logVerbose("Summary already initialized, cleaning up first");resetSummary()}logVerbose("Initializing summary functionality");const summaryElements=queryAllByAttr(SELECTORS.SUMMARY_FIELD,root);logVerbose(`Found ${summaryElements.length} summary fields`);setupSummaryFields(summaryElements);setupSummaryListeners(root);updateAllSummaries();initialized5=true;logVerbose("Summary initialization complete")}function setupSummaryFields(summaryElements){summaryElements.forEach(element=>{const summaryFieldAttr=getAttrValue(element,"data-summary-field");if(!summaryFieldAttr)return;const fieldNames=summaryFieldAttr.split("|").map(name=>name.trim());const joinAttr=getAttrValue(element,"data-join");const joinType=joinAttr&&joinAttr in DEFAULTS.JOIN_SEPARATOR?joinAttr:"space";const type=getAttrValue(element,"data-summary-type")||void 0;const subtype=getAttrValue(element,"data-summary-subtype")||void 0;const number=getAttrValue(element,"data-summary-number")||void 0;const summaryField={element,fieldNames,joinType,type,subtype,number};summaryFields.push(summaryField);logVerbose("Summary field configured",{fieldNames,joinType,type,subtype,number})})}function setupSummaryListeners(root){const cleanup1=delegateEvent(root,"input",SELECTORS.STEP_FIELD_NAME,handleFieldChange);const cleanup2=delegateEvent(root,"change",SELECTORS.STEP_FIELD_NAME,handleFieldChange);const cleanup3=delegateEvent(root,"blur",SELECTORS.STEP_FIELD_NAME,handleFieldChange);cleanupFunctions5.push(cleanup1,cleanup2,cleanup3)}function handleFieldChange(event,target){if(!isFormInput(target))return;const fieldName=getAttrValue(target,"data-step-field-name");if(!fieldName)return;const value=getInputValue(target);logVerbose(`Summary field changed: ${fieldName}`,{value});FormState.setField(fieldName,value);updateSummariesForField(fieldName)}function updateSummariesForField(fieldName){summaryFields.forEach(summaryField=>{if(summaryField.fieldNames.includes(fieldName)){updateSummaryField(summaryField)}})}function updateSummary(){logVerbose("Updating all summaries");updateAllSummaries()}function updateAllSummaries(){summaryFields.forEach(summaryField=>{updateSummaryField(summaryField)})}function updateSummaryField(summaryField){const values=[];summaryField.fieldNames.forEach(fieldName=>{const value=FormState.getField(fieldName);if(value!==null&&value!==void 0&&value!==""){if(Array.isArray(value)){values.push(...value.filter(v=>v!==""))}else{values.push(String(value))}}});const joinedValue=joinValues(values,summaryField.joinType);updateSummaryElement(summaryField.element,joinedValue);logVerbose(`Summary field updated`,{fieldNames:summaryField.fieldNames,values,joinType:summaryField.joinType,result:joinedValue})}function joinValues(values,joinType){if(values.length===0)return"";const separator=DEFAULTS.JOIN_SEPARATOR[joinType];return values.join(separator)}function updateSummaryElement(element,value){element.textContent=value;if(value===""){element.classList.add("summary-empty");element.classList.remove("summary-filled")}else{element.classList.remove("summary-empty");element.classList.add("summary-filled")}}function clearSummary(fieldNames){if(fieldNames){logVerbose("Clearing specific summary fields",fieldNames);FormState.clearFields(fieldNames);fieldNames.forEach(fieldName=>{updateSummariesForField(fieldName)})}else{logVerbose("Clearing all summaries");FormState.clear();updateAllSummaries()}}function getSummaryState(){const state={};summaryFields.forEach((summaryField,index)=>{const key=summaryField.type&&summaryField.subtype&&summaryField.number?`${summaryField.type}-${summaryField.subtype}-${summaryField.number}`:`summary-${index}`;state[key]={hasContent:(summaryField.element.textContent||"").trim().length>0}});return state}function resetSummary(){logVerbose("Resetting summary functionality");cleanupFunctions5.forEach(cleanup=>cleanup());cleanupFunctions5=[];summaryFields.forEach(summaryField=>{updateSummaryElement(summaryField.element,"")});summaryFields=[];initialized5=false;logVerbose("Summary reset complete")}var FormLibrary=class _FormLibrary{constructor(){this.initialized=false;this.rootElement=document;logVerbose("FormLibrary instance created")}static getInstance(){if(!_FormLibrary.instance){_FormLibrary.instance=new _FormLibrary}return _FormLibrary.instance}init(root=document){if(this.initialized){logVerbose("FormLibrary already initialized, reinitializing...");this.destroy()}this.rootElement=root;logVerbose("Initializing FormLibrary with enhanced skip functionality",{root:root===document?"document":"custom element"});const multistepForms=root.querySelectorAll(SELECTORS.MULTISTEP);const logicForms=root.querySelectorAll(SELECTORS.LOGIC);const stepElements=root.querySelectorAll(SELECTORS.STEP);logVerbose("Form detection results",{multistepForms:multistepForms.length,logicForms:logicForms.length,stepElements:stepElements.length});if(multistepForms.length===0&&stepElements.length===0){logVerbose("No compatible forms found, library will not initialize");return}try{initErrors(root);initValidation(root);if(logicForms.length>0){initBranching(root)}if(multistepForms.length>0||stepElements.length>0){initMultiStep(root)}initSummary(root);this.initialized=true;logVerbose("FormLibrary initialization complete with enhanced skip functionality");this.logCurrentState()}catch(error){logVerbose("FormLibrary initialization failed",error);throw error}}destroy(){if(!this.initialized){logVerbose("FormLibrary not initialized, nothing to destroy");return}logVerbose("Destroying FormLibrary");try{resetBranching();resetSkip()}catch(error){logVerbose("Error during FormLibrary destruction",error)}FormState.clear();clearQueryCache();this.initialized=false;logVerbose("FormLibrary destruction complete")}isInitialized(){return this.initialized}getState(){return{initialized:this.initialized,formState:FormState.getDebugInfo(),branching:getBranchingState(),multiStep:getMultiStepState(),validation:getValidationState(),errors:getErrorState(),summary:getSummaryState(),skip:getSkipState()}}logCurrentState(){const state=this.getState();logVerbose("Current FormLibrary State",state)}validateForm(){if(!this.initialized){logVerbose("Cannot validate form - library not initialized");return false}logVerbose("Validating entire form");const isValid=validateAllVisibleFields();logVerbose("Form validation result",{isValid});return isValid}resetForm(){if(!this.initialized){logVerbose("Cannot reset form - library not initialized");return}logVerbose("Resetting form to initial state");clearAllErrors();FormState.clear();clearSummary();try{goToStep(0)}catch(error){logVerbose("Could not go to first step during reset",error)}logVerbose("Form reset complete")}getFormData(){return FormState.getAll()}setFormData(data){Object.entries(data).forEach(([key,value])=>{FormState.setField(key,value)});updateSummary();logVerbose("Form data set",data)}};var FormLib=FormLibrary.getInstance();var index_default=FormLib;if(typeof window!=="undefined"){const autoInit=()=>{const multistepForms=document.querySelectorAll(SELECTORS.MULTISTEP);const stepElements=document.querySelectorAll(SELECTORS.STEP);if(multistepForms.length>0||stepElements.length>0){logVerbose("Auto-initializing FormLibrary on DOM ready");FormLib.init()}};if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",autoInit)}else{autoInit()}}if(typeof window!=="undefined"){window.FormLib=FormLib;logVerbose("FormLib attached to window for debugging")}return __toCommonJS(index_exports);})();
