"use strict";var FormLib=(()=>{var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);var Forms_exports={};__export(Forms_exports,{FormState:()=>FormState,clearAllErrors:()=>clearAllErrors,clearError:()=>clearError,clearSummary:()=>clearSummary,default:()=>Forms_default,getCleanState:()=>getCleanState,getFieldsWithErrors:()=>getFieldsWithErrors,goToStep:()=>goToStep,goToStepById:()=>goToStepById,goToStepByIdClean:()=>goToStepByIdClean,hasError:()=>hasError,initBrowserValidationFix:()=>initBrowserValidationFix,initErrors:()=>initErrors,initMultiStep:()=>initMultiStep,initMultiStepClean:()=>initMultiStepClean,initSummary:()=>initSummary,initValidation:()=>initValidation,showError:()=>showError,showErrors:()=>showErrors,updateSummary:()=>updateSummary,validateAllVisibleFields:()=>validateAllVisibleFields,validateField:()=>validateField,validateStep:()=>validateStep});var SELECTORS={MULTISTEP:'[data-form="multistep"]',LOGIC:"[data-logic]",STEP:'[data-form="step"]',ANSWER:"[data-answer]",GO_TO:"[data-go-to]",SKIP:"[data-skip]",NEXT_BTN:'[data-form="next-btn"]',BACK_BTN:'[data-form="back-btn"]',SUBMIT:'[data-form="submit"]',SUBMIT_BTN:'[data-form="submit-btn"]',ERROR_DISPLAY:'[data-form="error"]',SHOW_IF:"[data-show-if]",STEP_TYPE:"[data-step-type]",STEP_SUBTYPE:"[data-step-subtype]",STEP_NUMBER:"[data-step-number]",STEP_FIELD_NAME:"[data-step-field-name]",SUMMARY_FIELD:"[data-summary-field]",SUMMARY_TYPE:"[data-summary-type]",SUMMARY_SUBTYPE:"[data-summary-subtype]",SUMMARY_NUMBER:"[data-summary-number]",JOIN:"[data-join]",REQUIRED:"[required]",ERROR_MESSAGE:"[data-error-message]",VALIDATE:"[data-validate]",ALL_INPUTS:"input, select, textarea",FORM_FIELD_WRAPPER:".form-field_wrapper",FORM_FIELD_LABEL:".form_field-label",FORM_INPUT:".form_input",FORM_ERROR_MESSAGE:".form_error-message"};var DEFAULTS={START_STEP:1,DEBUG:true,LOG_PREFIX:"[FormLib]",VALIDATION_DELAY:300,ANIMATION_DURATION:300,JOIN_SEPARATOR:{space:" ",comma:", ",dash:" - ",pipe:" | ",newline:"\n"}};var CSS_CLASSES={ACTIVE_STEP:"active-step",HIDDEN_STEP:"hidden-step",HIDDEN_STEP_ITEM:"hidden-step-item",ERROR_FIELD:"error-field",ACTIVE_ERROR:"active-error",DISABLED:"disabled",FORM_FIELD_WRAPPER:"form-field_wrapper",FORM_FIELD_LABEL:"form_field-label",FORM_INPUT:"form_input",FORM_ERROR_MESSAGE:"form_error-message"};var FormStateManager=class{constructor(){this.data={};logVerbose("FormState initialized (simplified)")}static getInstance(){if(!FormStateManager.instance){FormStateManager.instance=new FormStateManager}return FormStateManager.instance}setField(name,value){const oldValue=this.data[name];this.data[name]=value;logVerbose(`Field updated: ${name}`,{oldValue,newValue:value})}getField(name){return this.data[name]}getAll(){return{...this.data}}clear(){const oldData={...this.data};this.data={};logVerbose("FormState cleared",{oldData})}clearFields(fieldNames){const clearedFields={};fieldNames.forEach(name=>{if(this.data[name]!==void 0){clearedFields[name]=this.data[name];delete this.data[name]}});if(Object.keys(clearedFields).length>0){logVerbose("Fields cleared due to branch change",clearedFields)}}getDebugInfo(){return{data:this.data,fieldCount:Object.keys(this.data).length}}};var FormState=FormStateManager.getInstance();var EventEmitter=class{constructor(){this.events={};this.moduleStates=new Map}registerModule(name){this.moduleStates.set(name,{initialized:true,name})}unregisterModule(name){this.moduleStates.delete(name)}isModuleInitialized(name){return this.moduleStates.get(name)?.initialized??false}on(event,listener){if(!this.events[event]){this.events[event]=[]}this.events[event].push(listener);return()=>{this.off(event,listener)}}off(event,listener){if(!this.events[event]){return}this.events[event]=this.events[event].filter(l=>l!==listener)}emit(event,data){const eventName=String(event);console.log(`\u{1F504} [FormEvents] Emitting event: ${eventName}`,{eventData:data,timestamp:new Date().toISOString(),hasListeners:!!this.events[event],listenerCount:this.events[event]?.length||0});if(!this.events[event]){console.warn(`\u26A0\uFE0F [FormEvents] No listeners registered for event: ${eventName}`);return}if(event==="skip:request"&&!this.isModuleInitialized("multiStep")){console.error(`\u274C [FormEvents] CRITICAL: Skipping '${eventName}' event - multiStep module not initialized`,{eventData:data,registeredModules:Array.from(this.moduleStates.keys()),multiStepState:this.moduleStates.get("multiStep")});return}if(event==="branch:change"&&!this.isModuleInitialized("multiStep")){console.error(`\u274C [FormEvents] CRITICAL: Skipping '${eventName}' event - multiStep module not initialized`,{eventData:data,registeredModules:Array.from(this.moduleStates.keys()),multiStepState:this.moduleStates.get("multiStep")});return}let successCount=0;let errorCount=0;this.events[event].forEach((listener,index)=>{try{console.log(`\u{1F4E1} [FormEvents] Calling listener ${index+1}/${this.events[event].length} for ${eventName}`);listener(data);successCount++;console.log(`\u2705 [FormEvents] Listener ${index+1} completed successfully for ${eventName}`)}catch(error){errorCount++;console.error(`\u{1F4A5} [FormEvents] LISTENER ERROR ${index+1}/${this.events[event].length} for '${eventName}':`,{error,errorMessage:error instanceof Error?error.message:String(error),errorStack:error instanceof Error?error.stack:void 0,eventData:data,listenerIndex:index})}});console.log(`\u{1F4CA} [FormEvents] Event ${eventName} completed:`,{totalListeners:this.events[event].length,successful:successCount,failed:errorCount,eventData:data})}};var formEvents=new EventEmitter;var queryCache=new Map;function logVerbose(message,data){if(!DEFAULTS.DEBUG)return;const timestamp=new Date().toISOString().split("T")[1].split(".")[0];const prefix=`${DEFAULTS.LOG_PREFIX} [${timestamp}]`;if(data!==void 0){console.log(`${prefix} ${message}`,data)}else{console.log(`${prefix} ${message}`)}}function clearQueryCache(){queryCache.clear()}function queryAllByAttr(selector,root=document){if(root===document){const cacheKey=`all:${selector}`;if(queryCache.has(cacheKey)){return queryCache.get(cacheKey)}const result=root.querySelectorAll(selector);queryCache.set(cacheKey,result);return result}return root.querySelectorAll(selector)}function queryByAttr(selector,root=document){if(root===document){const cacheKey=`single:${selector}`;if(queryCache.has(cacheKey)){return queryCache.get(cacheKey)}const result=root.querySelector(selector);queryCache.set(cacheKey,result);return result}return root.querySelector(selector)}function getAttrValue(element,attribute){return element.getAttribute(attribute)}function addClass(element,className){element.classList.add(className)}function removeClass(element,className){element.classList.remove(className)}function hasClass(element,className){return element.classList.contains(className)}function showElement(element){removeClass(element,"hidden-step");const originalDisplay=element.getAttribute("data-original-display")||"";const shouldBeFlex=element.classList.contains("flex")||element.classList.contains("d-flex")||element.classList.contains("step_wrapper")||element.classList.contains("step-wrapper")||getComputedStyle(element).display==="flex";let displayValue="block";if(originalDisplay&&originalDisplay!=="none"){displayValue=originalDisplay}else if(shouldBeFlex){displayValue="flex"}element.style.setProperty("display",displayValue,"important");element.style.setProperty("visibility","visible","important");element.style.setProperty("opacity","1","important");element.style.setProperty("transform","none","important");element.style.removeProperty("height");element.style.removeProperty("max-height");element.style.removeProperty("width");element.style.removeProperty("max-width");console.log(`\u{1F504} [Utils] Showing element:`,{element,tagName:element.tagName,id:element.id,className:element.className,dataAnswer:element.getAttribute("data-answer"),displayValue,originalDisplay:originalDisplay||"none stored",currentDisplay:element.style.display,computedDisplay:getComputedStyle(element).display,computedVisibility:getComputedStyle(element).visibility,computedOpacity:getComputedStyle(element).opacity,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)})}function hideElement(element){const computedDisplay=getComputedStyle(element).display;if(computedDisplay&&computedDisplay!=="none"){element.setAttribute("data-original-display",computedDisplay)}addClass(element,"hidden-step");element.style.setProperty("display","none","important");element.style.setProperty("visibility","hidden","important");element.style.setProperty("opacity","0","important");console.log(`\u{1F504} [Utils] Hiding element:`,{element,tagName:element.tagName,id:element.id,className:element.className,originalDisplay:computedDisplay,currentDisplay:element.style.display,computedDisplay:getComputedStyle(element).display,computedVisibility:getComputedStyle(element).visibility,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)})}function isVisible(element){const style=getComputedStyle(element);return style.display!=="none"&&style.visibility!=="hidden"&&style.opacity!=="0"&&!hasClass(element,"hidden-step")}function debounce(func,delay){let timeoutId;return(...args)=>{clearTimeout(timeoutId);timeoutId=setTimeout(()=>func(...args),delay)}}function isFormInput(element){return element instanceof HTMLInputElement||element instanceof HTMLSelectElement||element instanceof HTMLTextAreaElement}function getInputValue(input){if(input instanceof HTMLInputElement){if(input.type==="checkbox"||input.type==="radio"){return input.checked?input.value:""}return input.value}if(input instanceof HTMLSelectElement&&input.multiple){return Array.from(input.selectedOptions).map(option=>option.value)}return input.value}function delegateEvent(root,eventType,selector,handler){const delegatedHandler=event=>{const target=event.target?.closest(selector);if(target){handler(event,target)}};root.addEventListener(eventType,delegatedHandler);return()=>{root.removeEventListener(eventType,delegatedHandler)}}var fieldCoordinatorInitialized=false;var fieldCoordinatorCleanup=[];function initFieldCoordinator(root=document){if(fieldCoordinatorInitialized){logVerbose("Field coordinator already initialized, cleaning up first");resetFieldCoordinator()}logVerbose("Initializing centralized field coordinator");const cleanup1=delegateEvent(root,"input","input, select, textarea",handleFieldInput);const cleanup2=delegateEvent(root,"change","input, select, textarea",handleFieldChange);const cleanup3=delegateEvent(root,"blur","input, select, textarea",handleFieldBlur);fieldCoordinatorCleanup.push(cleanup1,cleanup2,cleanup3);fieldCoordinatorInitialized=true;logVerbose("Field coordinator initialization complete")}function handleFieldInput(event,target){if(!isFormInput(target))return;const fieldName=getFieldName(target);const fieldValue=getInputValue(target);if(fieldName){FormState.setField(fieldName,fieldValue);logVerbose("Field input detected",{fieldName,value:fieldValue,eventType:"input"});formEvents.emit("field:input",{fieldName,value:fieldValue,element:target,eventType:"input"})}}function handleFieldChange(event,target){if(!isFormInput(target))return;const fieldName=getFieldName(target);const fieldValue=getInputValue(target);if(fieldName){FormState.setField(fieldName,fieldValue);logVerbose("Field change detected",{fieldName,value:fieldValue,eventType:"change"});formEvents.emit("field:change",{fieldName,value:fieldValue,element:target,eventType:"change"})}}function handleFieldBlur(event,target){if(!isFormInput(target))return;const fieldName=getFieldName(target);const fieldValue=getInputValue(target);if(fieldName){logVerbose("Field blur detected",{fieldName,value:fieldValue,eventType:"blur"});formEvents.emit("field:blur",{fieldName,value:fieldValue,element:target,eventType:"blur"})}}function getFieldName(element){const htmlElement=element;return htmlElement.name||getAttrValue(element,"data-step-field-name")||null}function resetFieldCoordinator(){if(!fieldCoordinatorInitialized){logVerbose("Field coordinator not initialized, nothing to reset");return}logVerbose("Resetting field coordinator");fieldCoordinatorCleanup.forEach(cleanup=>cleanup());fieldCoordinatorCleanup=[];fieldCoordinatorInitialized=false;logVerbose("Field coordinator reset complete")}var errorConfigs=new Map;var errorStates=new Map;var cssInjected=false;function injectErrorCSS(){if(cssInjected){return}const css=`
    /* Form Library Error Message Styles - Auto-injected v1.5.4 - Enhanced Error Styling */
    .form_error-message {
      display: none !important;
      opacity: 0 !important;
      visibility: hidden !important;
      transition: all 0.2s ease-in-out !important;
    }

    .form_error-message.active-error {
      display: block !important;
      opacity: 1 !important;
      visibility: visible !important;
      color: #e74c3c !important;
      font-size: 0.875rem !important;
      margin-top: 0.25rem !important;
      line-height: 1.4 !important;
      animation: errorAppear 0.2s ease-out !important;
    }

    /* Error field styling - Enhanced red borders */
    input.error-field,
    select.error-field,
    textarea.error-field,
    .form_input.error-field {
      border: 2px solid #e74c3c !important;
      box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1) !important;
      background-color: rgba(231, 76, 60, 0.02) !important;
      transition: all 0.2s ease-in-out !important;
    }

    input.error-field:focus,
    select.error-field:focus,
    textarea.error-field:focus,
    .form_input.error-field:focus {
      border-color: #c0392b !important;
      box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.2) !important;
      outline: none !important;
    }

    .form-field_wrapper.error-field {
      position: relative;
    }

    .form-field_wrapper.error-field::before {
      content: '';
      position: absolute;
      top: -3px;
      left: -3px;
      right: -3px;
      bottom: -3px;
      border: 2px solid #e74c3c;
      border-radius: 6px;
      pointer-events: none;
      opacity: 0.4;
      animation: errorPulse 2s ease-in-out infinite;
    }

    @keyframes errorPulse {
      0%, 100% { opacity: 0.4; }
      50% { opacity: 0.7; }
    }

    @keyframes errorAppear {
      from {
        opacity: 0 !important;
        transform: translateY(-5px) !important;
      }
      to {
        opacity: 1 !important;
        transform: translateY(0) !important;
      }
    }
  `;const styleElement=document.createElement("style");styleElement.setAttribute("data-form-lib","error-styles");styleElement.textContent=css;document.head.appendChild(styleElement);cssInjected=true;logVerbose("\u{1F4E6} [Errors] CSS auto-injected for error visibility")}function initErrors(root=document){logVerbose("Initializing error handling");injectErrorCSS();const inputs=root.querySelectorAll("input, select, textarea");inputs.forEach(input=>{const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(fieldName){errorConfigs.set(fieldName,{fieldName,element:input,customMessage:getAttrValue(input,"data-error-message")||void 0})}});formEvents.registerModule("errors");logVerbose(`Error handling initialized for ${errorConfigs.size} fields`)}function showError(fieldName,message){const config=errorConfigs.get(fieldName);if(!config){logVerbose(`Cannot show error for unknown field: ${fieldName}`);return}const errorMessage=config.customMessage||message||"This field has an error";logVerbose(`Showing error for field: ${fieldName}`,{message:errorMessage,hasCustomMessage:!!config.customMessage,messageSource:config.customMessage?"html":message?"parameter":"fallback"});addClass(config.element,CSS_CLASSES.ERROR_FIELD);const errorElement=findOrCreateErrorElement(config);if(errorElement){if(!config.customMessage||message){errorElement.textContent=errorMessage}addClass(errorElement,CSS_CLASSES.ACTIVE_ERROR);config.errorElement=errorElement;logVerbose(`Error element activated for field: ${fieldName}`,{elementVisible:errorElement.offsetParent!==null,hasActiveClass:errorElement.classList.contains(CSS_CLASSES.ACTIVE_ERROR)})}scrollToFieldIfNeeded(config.element)}function clearError(fieldName){const config=errorConfigs.get(fieldName);if(!config){logVerbose(`Cannot clear error for unknown field: ${fieldName}`);return}logVerbose(`Clearing error for field: ${fieldName}`);removeClass(config.element,CSS_CLASSES.ERROR_FIELD);if(config.errorElement){config.errorElement.textContent="";removeClass(config.errorElement,CSS_CLASSES.ACTIVE_ERROR)}}function clearAllErrors(){logVerbose("Clearing all field errors");errorConfigs.forEach((config,fieldName)=>{clearError(fieldName)})}function showErrors(errors){logVerbose("Showing multiple errors",errors);Object.entries(errors).forEach(([fieldName,message])=>{showError(fieldName,message)})}function hasError(fieldName){const config=errorConfigs.get(fieldName);if(!config)return false;return config.element.classList.contains(CSS_CLASSES.ERROR_FIELD)}function getFieldsWithErrors(){const fieldsWithErrors=[];errorConfigs.forEach((config,fieldName)=>{if(hasError(fieldName)){fieldsWithErrors.push(fieldName)}});return fieldsWithErrors}function findOrCreateErrorElement(config){if(!config||!config.element){logVerbose("Cannot create error element - no config or element provided");return null}if(!config.element.parentElement){logVerbose(`Cannot create error element for field: ${config.fieldName} - no parent element`,{element:config.element,parentElement:config.element.parentElement,nodeName:config.element.nodeName,id:config.element.id});return null}let errorElement=null;const fieldWrapper=config.element.closest(".form-field_wrapper");if(fieldWrapper){errorElement=fieldWrapper.querySelector(".form_error-message");if(errorElement&&errorElement.textContent&&errorElement.textContent.trim()!==""){const customText=errorElement.textContent.trim();if(!customText.includes("This is some text inside of a div block")){config.customMessage=customText;logVerbose(`Found custom error message for field: ${config.fieldName}`,{customText})}}if(!errorElement){errorElement=fieldWrapper.querySelector('[data-form="error"]')}}if(!errorElement){const parentElement=config.element.parentElement;errorElement=parentElement.querySelector(".form_error-message");if(errorElement&&errorElement.textContent&&errorElement.textContent.trim()!==""){const customText=errorElement.textContent.trim();if(!customText.includes("This is some text inside of a div block")){config.customMessage=customText;logVerbose(`Found custom error message for field: ${config.fieldName}`,{customText})}}}if(!errorElement){try{errorElement=config.element.parentElement.querySelector(`${SELECTORS.ERROR_DISPLAY}[data-field="${config.fieldName}"]`)}catch(error){logVerbose(`Error finding existing error element for field: ${config.fieldName}`,error)}}if(!errorElement){try{errorElement=document.createElement("div");errorElement.setAttribute("data-form","error");errorElement.setAttribute("data-field",config.fieldName);errorElement.className="form_error-message";if(fieldWrapper){fieldWrapper.appendChild(errorElement)}else{config.element.parentElement.insertBefore(errorElement,config.element.nextSibling)}logVerbose(`Created new error element for field: ${config.fieldName}`)}catch(error){logVerbose(`Failed to create error element for field: ${config.fieldName}`,error);return null}}else{logVerbose(`Found existing error element for field: ${config.fieldName}`,{className:errorElement.className,hasCustomMessage:!!config.customMessage})}return errorElement}function scrollToFieldIfNeeded(element){const rect=element.getBoundingClientRect();const isVisible2=rect.top>=0&&rect.left>=0&&rect.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&rect.right<=(window.innerWidth||document.documentElement.clientWidth);if(!isVisible2){element.scrollIntoView({behavior:"smooth",block:"center"});logVerbose(`Scrolled to field with error: ${element.name||"unnamed"}`)}}function getErrorState(){const state={};errorStates.forEach((value,key)=>{state[key]={message:value.message}});return state}var initialized=false;var cleanupFunctions=[];var eventCleanupFunctions=[];var steps=[];var currentStepIndex=-1;var currentStepId="";var stepHistory=[];var navigatedSteps=new Set;function initMultiStep(root=document){if(initialized){logVerbose("MultiStep already initialized, cleaning up first");resetMultiStep()}console.log("\u{1F680} [MultiStep] === UPDATED STRUCTURE INITIALIZATION ===");const stepWrappers=root.querySelectorAll(".step_wrapper[data-answer]");console.log("\u{1F4CB} [MultiStep] Found step wrappers with data-answer:",{count:stepWrappers.length,selector:".step_wrapper[data-answer]"});if(stepWrappers.length===0){console.error("\u274C [MultiStep] No step wrappers with data-answer found!");return}steps=Array.from(stepWrappers).map((stepWrapper,index)=>{const dataAnswer=getAttrValue(stepWrapper,"data-answer");const isBranch=getAttrValue(stepWrapper,"data-branch")==="true";const parentStepElement=stepWrapper.closest('[data-form="step"]');console.log(`\u2705 [MultiStep] Registered step wrapper ${index}:`,{id:dataAnswer,isBranch,hasParentStep:!!parentStepElement,element:{tagName:stepWrapper.tagName,className:stepWrapper.className}});return{element:stepWrapper,id:dataAnswer||`step-${index}`,index,isBranch,parentStepElement}});console.log("\u{1F4CA} [MultiStep] Step registration complete:",{totalSteps:steps.length,stepIds:steps.map(s=>s.id),branchSteps:steps.filter(s=>s.isBranch).map(s=>s.id),regularSteps:steps.filter(s=>!s.isBranch).map(s=>s.id)});steps.forEach((step,index)=>{if(step.id==="step-0"){console.log(`\u{1F441}\uFE0F [MultiStep] Keeping step-0 visible for progressive disclosure`);showElement(step.element);step.element.classList.add("active-step")}else{console.log(`\u{1FAE5} [MultiStep] Hiding step ${index} (${step.id})`);hideElement(step.element)}});setupNavigationListeners(root);setupEventListeners();setupSkipListeners(root);if(steps.length>0){const step0Index=steps.findIndex(s=>s.id==="step-0");if(step0Index!==-1){console.log("\u{1F3AC} [MultiStep] Progressive disclosure: Setting step-0 as current");currentStepIndex=step0Index;currentStepId="step-0";stepHistory=["step-0"];navigatedSteps.add("step-0");const step0=steps[step0Index];showElement(step0.element);step0.element.classList.add("active-step");updateNavigationButtons();formEvents.emit("step:change",{currentStepIndex:step0Index,currentStepId:"step-0",navigatedSteps:Array.from(navigatedSteps),isBranchStep:step0.isBranch})}else{console.log("\u{1F3AC} [MultiStep] No step-0 found, showing first step");goToStep(0)}}initialized=true;formEvents.registerModule("multiStep");console.log("\u2705 [MultiStep] Updated structure initialization complete")}function getNavigatedSteps(){return Array.from(navigatedSteps)}function debugStepSystem(){console.log("\u{1F50D} [MultiStep] === STEP SYSTEM DEBUG ===");console.log("\u{1F4CA} Registered Steps:",{totalSteps:steps.length,currentStepIndex,currentStepId,navigatedStepsCount:navigatedSteps.size});steps.forEach((step,index)=>{const isCurrentStep=index===currentStepIndex;const isNavigated=navigatedSteps.has(step.id);const elementVisible=isVisible(step.element);console.log(`${isCurrentStep?"\u{1F441}\uFE0F":"\u{1F4A4}"} Step ${index} (${step.id}):`,{isBranch:step.isBranch,isNavigated,isCurrentStep,elementVisible,elementDisplay:getComputedStyle(step.element).display,elementVisibility:getComputedStyle(step.element).visibility,hasActiveClass:step.element.classList.contains("active-step"),hasHiddenClass:step.element.classList.contains("hidden-step"),elementClasses:step.element.className})});console.log("\u{1F4DC} Navigation History:",stepHistory);console.log("\u{1F5C2}\uFE0F Navigated Steps:",Array.from(navigatedSteps));const domStepWrappers=document.querySelectorAll(".step_wrapper[data-answer]");if(domStepWrappers.length!==steps.length){console.warn("\u26A0\uFE0F DOM vs Registered Steps Mismatch:",{domCount:domStepWrappers.length,registeredCount:steps.length,missing:Array.from(domStepWrappers).map(el=>getAttrValue(el,"data-answer")).filter(id=>!steps.some(s=>s.id===id))})}console.log("\u{1F50D} [MultiStep] === DEBUG COMPLETE ===")}function setupEventListeners(){const stepNavigateCleanup=formEvents.on("step:navigate",data=>{const eventData=data;console.log("\u{1F3AF} [MultiStep] Navigation event received:",{targetStepId:eventData.targetStepId,reason:eventData.reason});if(eventData.targetStepId){goToStepById(eventData.targetStepId)}});eventCleanupFunctions.push(stepNavigateCleanup)}function goToStepById(stepId){console.log("\u{1F3AF} [MultiStep] NAVIGATION to step ID:",stepId);if(!initialized){console.error("\u274C [MultiStep] Not initialized");return}const stepIndex=steps.findIndex(step=>step.id===stepId);if(stepIndex===-1){console.error("\u274C [MultiStep] Step not found:",{searchedFor:stepId,availableSteps:steps.map(s=>({id:s.id,isBranch:s.isBranch})),totalSteps:steps.length});const domElement=document.querySelector(`[data-answer="${stepId}"]`);if(domElement){console.error("\u{1F50D} [MultiStep] Step exists in DOM but not registered:",{stepId,element:{tagName:domElement.tagName,id:domElement.id,className:domElement.className,hasStepAttribute:domElement.hasAttribute("data-form"),dataForm:getAttrValue(domElement,"data-form"),parentElement:domElement.parentElement?.tagName,isStepWrapper:domElement.classList.contains("step_wrapper")}});if(domElement.classList.contains("step_wrapper")&&getAttrValue(domElement,"data-answer")){console.warn("\u{1F527} [MultiStep] Attempting to register missing step:",stepId);const isBranch=getAttrValue(domElement,"data-branch")==="true";const parentStepElement=domElement.closest('[data-form="step"]');const newStep={element:domElement,id:stepId,index:steps.length,isBranch,parentStepElement};steps.push(newStep);console.log("\u2705 [MultiStep] Successfully registered missing step:",newStep);goToStep(steps.length-1);return}}return}console.log("\u2705 [MultiStep] Found step, navigating:",{stepId,stepIndex,currentIndex:currentStepIndex,isBranch:steps[stepIndex].isBranch});goToStep(stepIndex)}function goToStep(stepIndex){console.log("\u{1F3AF} [MultiStep] GO TO STEP:",{targetIndex:stepIndex,currentIndex:currentStepIndex,totalSteps:steps.length});if(!initialized||stepIndex<0||stepIndex>=steps.length){console.error("\u274C [MultiStep] Invalid navigation:",{initialized,stepIndex,totalSteps:steps.length});return}const targetStep=steps[stepIndex];if(currentStepIndex!==-1&&currentStepIndex!==stepIndex){const currentStep=steps[currentStepIndex];console.log("\u{1F44B} [MultiStep] Hiding current step:",currentStep.id);hideElement(currentStep.element);currentStep.element.classList.remove("active-step")}console.log("\u{1F441}\uFE0F [MultiStep] Showing target step:",targetStep.id);showElement(targetStep.element);targetStep.element.classList.add("active-step");navigatedSteps.add(targetStep.id);currentStepIndex=stepIndex;currentStepId=targetStep.id;if(stepHistory[stepHistory.length-1]!==targetStep.id){stepHistory.push(targetStep.id)}updateNavigationButtons();formEvents.emit("step:change",{currentStepIndex:stepIndex,currentStepId:targetStep.id,navigatedSteps:Array.from(navigatedSteps),isBranchStep:targetStep.isBranch});console.log("\u2705 [MultiStep] Navigation complete:",{stepId:targetStep.id,isBranch:targetStep.isBranch,isVisible:isVisible(targetStep.element),hasActiveClass:targetStep.element.classList.contains("active-step"),totalNavigatedSteps:navigatedSteps.size});if(!isVisible(targetStep.element)){console.error("\u274C [MultiStep] Step still not visible after show!");diagnoseVisibilityIssues(targetStep.element,targetStep.id)}}function setupNavigationListeners(root){const cleanup1=delegateEvent(root,"click",SELECTORS.NEXT_BTN,handleNextClick);const cleanup2=delegateEvent(root,"click",SELECTORS.BACK_BTN,handleBackClick);const cleanup3=delegateEvent(root,"click",SELECTORS.SUBMIT_BTN,handleSubmitClick);const cleanup4=delegateEvent(root,"change",'input[type="radio"][data-go-to]',handleRadioNavigation);const cleanup5=delegateEvent(root,"click",'input[type="radio"][data-go-to]',handleRadioNavigation);const cleanup6=delegateEvent(root,"click","label",handleLabelClick);const cleanup7=delegateEvent(root,"click","[data-go-to]",handleDirectNavigation);cleanupFunctions.push(cleanup1,cleanup2,cleanup3,cleanup4,cleanup5,cleanup6,cleanup7);logVerbose("Enhanced navigation listeners with Webflow compatibility setup complete")}function handleLabelClick(event,target){const label=target;let radioButton=null;radioButton=label.querySelector('input[type="radio"][data-go-to]');if(!radioButton&&label.htmlFor){const targetInput=document.getElementById(label.htmlFor);if(targetInput&&targetInput.type==="radio"&&getAttrValue(targetInput,"data-go-to")){radioButton=targetInput}}if(radioButton){console.log("\u{1F3F7}\uFE0F [MultiStep] Label click detected for radio navigation:",{labelClicked:true,radioId:radioButton.id,dataGoTo:getAttrValue(radioButton,"data-go-to"),radioHidden:radioButton.style.opacity==="0"||radioButton.style.position==="absolute"});radioButton.checked=true;radioButton.dispatchEvent(new Event("change",{bubbles:true}));handleRadioNavigation(event,radioButton)}}function handleDirectNavigation(event,target){if(target instanceof HTMLInputElement&&target.type==="radio"){return}const isStepWrapper=target.classList.contains("step_wrapper")||target.classList.contains("step-wrapper")||getAttrValue(target,"data-answer");if(isStepWrapper){console.log("\u{1F6D1} [MultiStep] Ignoring navigation from step wrapper:",{stepId:getAttrValue(target,"data-answer"),reason:"Step wrappers should not trigger direct navigation"});return}const isNavigationElement=target.tagName==="A"||target.tagName==="BUTTON"||getAttrValue(target,"data-form")?.includes("btn")||getAttrValue(target,"data-skip")||target.classList.contains("button")||target.closest('[data-form*="btn"]')||target.closest("button, a");if(!isNavigationElement){console.log("\u{1F6D1} [MultiStep] Ignoring navigation from non-navigation element:",{element:target.tagName,className:target.className,reason:"Only buttons, links, and navigation elements can trigger navigation"});return}const goToValue=getAttrValue(target,"data-go-to");if(!goToValue){return}event.preventDefault();console.log("\u{1F3AF} [MultiStep] Direct navigation triggered:",{element:target.tagName,className:target.className,goToValue,isNavigationElement:true});goToStepById(goToValue)}function handleRadioNavigation(event,target){const radio=target;console.log("\u{1F3AF} [MultiStep] Radio button navigation:",{radioName:radio.name,radioValue:radio.value,isChecked:radio.checked,dataGoTo:getAttrValue(radio,"data-go-to"),eventType:event.type});if(!radio.checked){return}const goToValue=getAttrValue(radio,"data-go-to");if(!goToValue){console.warn("\u26A0\uFE0F [MultiStep] Radio button missing data-go-to attribute");return}applyRadioActiveClass(radio);setTimeout(()=>{console.log("\u{1F680} [MultiStep] Navigating to step via radio button:",goToValue);const currentStep=steps[currentStepIndex];if(currentStep&&currentStep.isBranch){console.log("\u{1F4DD} [MultiStep] Storing branch selection:",{branchStepId:currentStep.id,selectedOption:goToValue,radioValue:radio.value})}goToStepById(goToValue)},100)}function applyRadioActiveClass(selectedRadio){const groupName=selectedRadio.name;if(!groupName)return;const activeClass=getAttrValue(selectedRadio,"fs-inputactive-class")||"is-active-inputactive";const radioGroup=document.querySelectorAll(`input[type="radio"][name="${groupName}"]`);radioGroup.forEach(radio=>{const htmlRadio=radio;const radioLabel=htmlRadio.closest("label");if(htmlRadio!==selectedRadio){htmlRadio.classList.remove(activeClass);radioLabel?.classList.remove(activeClass)}});selectedRadio.classList.add(activeClass);const parentLabel=selectedRadio.closest("label");parentLabel?.classList.add(activeClass)}function setupSkipListeners(root){const cleanup=delegateEvent(root,"click",SELECTORS.SKIP,handleSkipButtonClick);cleanupFunctions.push(cleanup);logVerbose("Skip listeners setup complete")}function validateCurrentStep(currentStep){logVerbose("\u{1F50D} [MultiStep] Starting validation for step:",currentStep.id);const requiredFields=currentStep.element.querySelectorAll("input[data-required], select[data-required], textarea[data-required]");if(requiredFields.length===0){logVerbose("\u2705 [MultiStep] No required fields in step, validation passed");return true}logVerbose(`\u{1F50D} [MultiStep] Found ${requiredFields.length} required fields to validate`);let hasErrors=false;requiredFields.forEach((field,index)=>{const input=field;const fieldName=input.name||input.getAttribute("data-step-field-name")||`field-${index}`;const value=input.value?.trim()||"";const isEmpty=!value;logVerbose(`\u{1F50D} [MultiStep] Validating field #${index}:`,{fieldName,inputName:input.name,dataStepFieldName:input.getAttribute("data-step-field-name"),fallbackName:`field-${index}`,value,valueLength:value.length,isEmpty,inputType:input.type||input.tagName,inputId:input.id});if(isEmpty){hasErrors=true;const errorMessage=getCustomErrorMessage(input)||"This field is required";showError(fieldName,errorMessage);input.classList.add("error-field");const wrapper=input.closest(".form-field_wrapper");if(wrapper){wrapper.classList.add("error-field")}logVerbose(`\u274C [MultiStep] Required field is empty: ${fieldName}`,{fieldType:input.type||input.tagName,value,errorStylingApplied:true})}else{clearError(fieldName);input.classList.remove("error-field");const wrapper=input.closest(".form-field_wrapper");if(wrapper){wrapper.classList.remove("error-field")}logVerbose(`\u2705 [MultiStep] Required field is filled: ${fieldName}`)}});if(hasErrors){logVerbose(`\u{1F6AB} [MultiStep] Validation failed - ${requiredFields.length} required fields with errors`);const firstEmptyField=currentStep.element.querySelector('input[data-required]:invalid, input[data-required][value=""], select[data-required][value=""], textarea[data-required][value=""]');if(!firstEmptyField){const emptyField=Array.from(requiredFields).find(field=>{const input=field;return!input.value?.trim()});if(emptyField){logVerbose("\u{1F3AF} [MultiStep] Auto-focusing first empty required field");emptyField.scrollIntoView({behavior:"smooth",block:"center"});setTimeout(()=>emptyField.focus(),300)}}else{logVerbose("\u{1F3AF} [MultiStep] Auto-focusing first empty required field (via selector)");firstEmptyField.scrollIntoView({behavior:"smooth",block:"center"});setTimeout(()=>firstEmptyField.focus(),300)}return false}logVerbose("\u2705 [MultiStep] All required fields validated successfully");return true}function getCustomErrorMessage(input){const wrapper=input.closest(".form-field_wrapper");if(wrapper){const errorElement=wrapper.querySelector(".form_error-message");if(errorElement&&errorElement.textContent){const text=errorElement.textContent.trim();if(!text.includes("This is some text inside of a div block")){return text}}}const parent=input.parentElement;if(parent){const errorElement=parent.querySelector(".form_error-message");if(errorElement&&errorElement.textContent){const text=errorElement.textContent.trim();if(!text.includes("This is some text inside of a div block")){return text}}}return null}function handleNextClick(event){event.preventDefault();const currentStep=steps[currentStepIndex];if(!currentStep){console.error("\u274C [MultiStep] No current step found for next navigation");return}logVerbose("\u{1F50D} [MultiStep] Validating current step before navigation:",{stepId:currentStep.id,stepIndex:currentStepIndex});const isCurrentStepValid=validateCurrentStep(currentStep);if(!isCurrentStepValid){logVerbose("\u{1F6AB} [MultiStep] Navigation blocked - validation failed for step:",currentStep.id);return}logVerbose("\u2705 [MultiStep] Validation passed, proceeding with navigation");const currentGoTo=getAttrValue(currentStep.element,"data-go-to");if(currentGoTo){console.log("\u{1F500} [MultiStep] Using data-go-to for next navigation:",currentGoTo);goToStepById(currentGoTo)}else{const nextIndex=currentStepIndex+1;if(nextIndex<steps.length){console.log("\u27A1\uFE0F [MultiStep] Using linear navigation to index:",nextIndex);goToStep(nextIndex)}else{console.log("\u{1F3C1} [MultiStep] Reached end of form")}}}function handleBackClick(event){event.preventDefault();if(stepHistory.length>1){stepHistory.pop();const previousStepId=stepHistory[stepHistory.length-1];console.log("\u{1F519} [MultiStep] Back navigation using history:",{previousStepId,historyLength:stepHistory.length,fullHistory:[...stepHistory]});goToStepById(previousStepId)}else{const previousIndex=currentStepIndex-1;if(previousIndex>=0){console.log("\u{1F519} [MultiStep] Back navigation using linear index:",previousIndex);goToStep(previousIndex)}else{console.log("\u{1F6AB} [MultiStep] Already at first step")}}}function handleSubmitClick(event){logVerbose("Form submission - allowing default behavior")}function handleSkipButtonClick(event,target){event.preventDefault();const dataSkip=getAttrValue(target,"data-skip");if(!dataSkip||dataSkip==="true"||dataSkip===""){return}goToStepById(dataSkip)}function updateNavigationButtons(){const nextBtn=document.querySelector(SELECTORS.NEXT_BTN);const backBtn=document.querySelector(SELECTORS.BACK_BTN);const submitBtn=document.querySelector(SELECTORS.SUBMIT_BTN);if(!nextBtn||!backBtn||!submitBtn)return;const isFirstStep=currentStepIndex===0;const isLastStep=currentStepIndex===steps.length-1;backBtn.style.display=isFirstStep?"none":"";if(isLastStep){nextBtn.style.display="none";submitBtn.style.display=""}else{nextBtn.style.display="";submitBtn.style.display="none"}}function resetMultiStep(){if(!initialized){logVerbose("Multi-step module not initialized, nothing to reset");return}logVerbose("Resetting multi-step module");formEvents.unregisterModule("multiStep");cleanupFunctions.forEach(fn=>fn());cleanupFunctions=[];steps=[];currentStepIndex=-1;currentStepId="";stepHistory=[];navigatedSteps.clear();initialized=false;eventCleanupFunctions.forEach(fn=>fn());eventCleanupFunctions=[];logVerbose("Multi-step module reset")}function diagnoseVisibilityIssues(element,stepId){const computedStyle=getComputedStyle(element);const parentElements=[];let currentElement=element;while(currentElement&&currentElement!==document.body){parentElements.push(currentElement);currentElement=currentElement.parentElement}console.log(`\u{1F50D} [MultiStep] Diagnosing visibility issues for step ${stepId}:`,{targetElement:{tagName:element.tagName,id:element.id,className:element.className,computedDisplay:computedStyle.display,computedVisibility:computedStyle.visibility,computedOpacity:computedStyle.opacity,inlineDisplay:element.style.display,inlineVisibility:element.style.visibility,inlineOpacity:element.style.opacity,hasHiddenClass:element.classList.contains("hidden-step"),isVisible:isVisible(element)},parentChain:parentElements.map(el=>({tagName:el.tagName,id:el.id,className:el.className,computedDisplay:getComputedStyle(el).display,computedVisibility:getComputedStyle(el).visibility,computedOpacity:getComputedStyle(el).opacity,hasHiddenClass:el.classList.contains("hidden-step")})),possibleConflicts:{hasDisplayNone:computedStyle.display==="none",hasVisibilityHidden:computedStyle.visibility==="hidden",hasZeroOpacity:computedStyle.opacity==="0",hasHiddenClass:element.classList.contains("hidden-step"),parentWithDisplayNone:parentElements.some(el=>getComputedStyle(el).display==="none"),parentWithVisibilityHidden:parentElements.some(el=>getComputedStyle(el).visibility==="hidden")}})}var initialized2=false;var steps2=[];var currentStepIndex2=0;function initMultiStepClean(root=document){console.log("\u{1F680} [CLEAN] Ultra-minimal initialization starting...");const stepElements=queryAllByAttr(SELECTORS.STEP,root);if(stepElements.length===0){console.error("\u274C [CLEAN] No steps found");return}steps2=Array.from(stepElements).map((element,index)=>{const stepWrapper=element.querySelector(".step_wrapper[data-answer]");const dataAnswer=stepWrapper?getAttrValue(stepWrapper,"data-answer"):getAttrValue(element,"data-answer");return{element,id:dataAnswer||`step-${index}`,index}});console.log("\u2705 [CLEAN] Steps registered:",steps2.map(s=>s.id));hideAllSteps();showStep(0);setupRadioListeners(root);initialized2=true;console.log("\u2705 [CLEAN] Initialization complete")}function hideAllSteps(){steps2.forEach(step=>{step.element.style.display="none";step.element.style.visibility="hidden";console.log(`\u{1F648} [CLEAN] Hiding: ${step.id}`)})}function showStep(stepIndex){if(stepIndex<0||stepIndex>=steps2.length){console.error("\u274C [CLEAN] Invalid step index:",stepIndex);return}const step=steps2[stepIndex];hideAllSteps();step.element.style.setProperty("display","block","important");step.element.style.setProperty("visibility","visible","important");step.element.style.setProperty("opacity","1","important");currentStepIndex2=stepIndex;console.log(`\u2705 [CLEAN] Showing: ${step.id} at index ${stepIndex}`)}function goToStepByIdClean(stepId){console.log(`\u{1F3AF} [CLEAN] Navigate to: ${stepId}`);const stepIndex=steps2.findIndex(step=>step.id===stepId);if(stepIndex===-1){console.error("\u274C [CLEAN] Step not found:",stepId);console.log("Available steps:",steps2.map(s=>s.id));return}showStep(stepIndex)}function setupRadioListeners(root){const cleanup=delegateEvent(root,"change",'input[type="radio"][data-go-to]',(event,target)=>{const radio=target;if(!radio.checked)return;const goToValue=getAttrValue(radio,"data-go-to");if(!goToValue){console.warn("\u26A0\uFE0F [CLEAN] Radio missing data-go-to");return}console.log(`\u{1F518} [CLEAN] Radio clicked: ${radio.name} \u2192 ${goToValue}`);applyRadioStyling(radio);goToStepByIdClean(goToValue)});console.log("\u2705 [CLEAN] Radio listeners setup")}function applyRadioStyling(selectedRadio){const groupName=selectedRadio.name;if(!groupName)return;const activeClass="is-active-inputactive";document.querySelectorAll(`input[type="radio"][name="${groupName}"]`).forEach(radio=>{const r=radio;const label=r.closest("label");r.classList.remove(activeClass);label?.classList.remove(activeClass)});selectedRadio.classList.add(activeClass);const parentLabel=selectedRadio.closest("label");parentLabel?.classList.add(activeClass);console.log(`\u{1F3A8} [CLEAN] Styled radio: ${selectedRadio.name}`)}function getCleanState(){return{initialized:initialized2,currentStepIndex:currentStepIndex2,currentStepId:steps2[currentStepIndex2]?.id||"none",totalSteps:steps2.length,stepIds:steps2.map(s=>s.id)}}var initialized3=false;var eventCleanupFunctions2=[];var fieldValidations=new Map;var navigatedSteps2=new Set;function initValidation(root=document){if(initialized3){logVerbose("Validation already initialized, cleaning up first");resetValidation()}logVerbose("Initializing form validation");const formInputs=queryAllByAttr("input, select, textarea",root);logVerbose(`Found ${formInputs.length} form inputs`);setupFieldValidations(formInputs);setupValidationEventListeners();initialized3=true;formEvents.registerModule("validation");logVerbose("Validation initialization complete")}function setupFieldValidations(inputs){inputs.forEach(input=>{if(!isFormInput(input))return;const htmlInput=input;const fieldName=htmlInput.name||getAttrValue(input,"data-step-field-name");if(!fieldName){logVerbose("Skipping field validation setup - no field name",{element:input,name:htmlInput.name,dataStepFieldName:getAttrValue(input,"data-step-field-name"),id:htmlInput.id,type:htmlInput.type});return}const rules=extractValidationRules(input);if(rules.length===0){logVerbose(`No validation rules found for field: ${fieldName}`);return}fieldValidations.set(fieldName,{element:input,rules,isValid:true});logVerbose(`Validation rules set for field: ${fieldName}`,{rules:rules.map(r=>r.type),rulesCount:rules.length})})}function extractValidationRules(input){const rules=[];if(input.hasAttribute("required")||input.hasAttribute("data-required")){rules.push({type:"required",message:getAttrValue(input,"data-error-message")||"This field is required"})}if(input instanceof HTMLInputElement&&input.type==="email"){rules.push({type:"email",message:"Please enter a valid email address"})}if(input instanceof HTMLInputElement&&input.type==="tel"){rules.push({type:"phone",message:"Please enter a valid phone number"})}const minLength=getAttrValue(input,"minlength");if(minLength){rules.push({type:"min",value:parseInt(minLength),message:`Minimum ${minLength} characters required`})}const maxLength=getAttrValue(input,"maxlength");if(maxLength){rules.push({type:"max",value:parseInt(maxLength),message:`Maximum ${maxLength} characters allowed`})}const pattern=getAttrValue(input,"pattern");if(pattern){rules.push({type:"pattern",value:new RegExp(pattern),message:"Please enter a valid format"})}return rules}function setupValidationEventListeners(){const cleanup1=formEvents.on("field:input",data=>{debounce(()=>handleFieldValidationEvent(data),DEFAULTS.VALIDATION_DELAY)()});const cleanup2=formEvents.on("field:blur",handleFieldValidationEvent);const cleanup3=formEvents.on("field:change",handleFieldValidationEvent);const cleanup4=formEvents.on("step:change",data=>{if(data.currentStepId){navigatedSteps2.add(data.currentStepId);logVerbose(`Validation: Step ${data.currentStepId} marked as navigated`,{totalNavigatedSteps:navigatedSteps2.size,navigatedStepsList:Array.from(navigatedSteps2)})}});eventCleanupFunctions2.push(cleanup1,cleanup2,cleanup3,cleanup4);logVerbose("Validation module subscribed to centralized field and step events")}function handleFieldValidationEvent(data){const{fieldName,element,eventType}=data;if(!fieldName){logVerbose("Skipping validation - no field name found",{element,eventType});return}const shouldValidate=eventType==="blur"||eventType==="change";if(!shouldValidate){logVerbose(`Skipping validation for event type: ${eventType}`,{fieldName,eventType,reason:"Only validate on blur or change events"});return}const stepWrapper=element.closest(".step_wrapper[data-answer]");if(stepWrapper){const stepId=getAttrValue(stepWrapper,"data-answer");if(stepId&&!navigatedSteps2.has(stepId)){logVerbose(`Skipping validation for field in non-navigated step: ${fieldName}`,{stepId,navigatedSteps:Array.from(navigatedSteps2),fieldInNavigatedStep:false,eventType});return}logVerbose(`Validating field in navigated step: ${fieldName}`,{stepId,navigatedSteps:Array.from(navigatedSteps2),fieldInNavigatedStep:true,eventType})}validateField(fieldName)}function validateField(fieldName){const fieldValidation=fieldValidations.get(fieldName);if(!fieldValidation){logVerbose(`No validation rules found for field: ${fieldName}`);return true}const input=fieldValidation.element;if(!input){logVerbose(`No element found for field: ${fieldName}`);return true}const value=getInputValue(input);logVerbose(`Validating field: ${fieldName}`,{value,elementExists:!!input});for(const rule of fieldValidation.rules){const{isValid,message}=validateRule(value,rule);if(!isValid){fieldValidation.isValid=false;fieldValidation.errorMessage=message||"Invalid field";showError(fieldName,fieldValidation.errorMessage);updateFieldVisualState(input,false,fieldValidation.errorMessage);return false}}fieldValidation.isValid=true;clearError(fieldName);updateFieldVisualState(input,true);return true}var VALIDATION_PATTERNS={email:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,phone:/^[\+]?[1-9][\d]{0,15}$/,phoneUS:/^(\+1\s?)?(\([0-9]{3}\)|[0-9]{3})[\s\-]?[0-9]{3}[\s\-]?[0-9]{4}$/,url:/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$/,zipCode:/^\d{5}(-\d{4})?$/,zipCodeCA:/^[A-Za-z]\d[A-Za-z][ -]?\d[A-Za-z]\d$/,creditCard:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$/,ssn:/^\d{3}-?\d{2}-?\d{4}$/,strongPassword:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/};function validateRule(value,rule){switch(rule.type){case"required":return{isValid:Array.isArray(value)?value.length>0:!!value&&String(value).trim()!=="",message:rule.message};case"email":return{isValid:VALIDATION_PATTERNS.email.test(String(value)),message:rule.message||"Please enter a valid email address"};case"phone":const phoneValue=String(value).replace(/[\s\-\(\)]/g,"");const isValidPhone=VALIDATION_PATTERNS.phone.test(phoneValue)||VALIDATION_PATTERNS.phoneUS.test(String(value));return{isValid:isValidPhone,message:rule.message||"Please enter a valid phone number"};case"min":if(typeof rule.value!=="number")return{isValid:true};return{isValid:String(value).length>=rule.value,message:rule.message||`Minimum ${rule.value} characters required`};case"max":if(typeof rule.value!=="number")return{isValid:true};return{isValid:String(value).length<=rule.value,message:rule.message||`Maximum ${rule.value} characters allowed`};case"pattern":if(!(rule.value instanceof RegExp))return{isValid:true};return{isValid:rule.value.test(String(value)),message:rule.message||"Please enter a valid format"};case"custom":if(!rule.validator)return{isValid:true};try{return{isValid:rule.validator(value),message:rule.message||"Invalid value"}}catch(error){logVerbose("Error in custom validator",{error,rule});return{isValid:false,message:"Validation error occurred"}}default:return{isValid:true}}}function updateFieldVisualState(input,isValid,errorMessage){const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(!fieldName)return;if(!isValid){input.classList.add("error-field");showError(fieldName,errorMessage)}else{input.classList.remove("error-field");clearError(fieldName)}const fieldWrapper=input.closest(".form-field_wrapper");if(fieldWrapper){if(!isValid){fieldWrapper.classList.add("error-field")}else{fieldWrapper.classList.remove("error-field")}}}function validateStep(stepId){const stepElement=queryByAttr(`[data-answer="${stepId}"]`);if(!stepElement){logVerbose(`Step not found with data-answer="${stepId}"`);return true}if(!isVisible(stepElement)){logVerbose(`Skipping validation for hidden step: ${stepId}`);return true}logVerbose(`Validating step: ${stepId}`);const inputs=stepElement.querySelectorAll("input, select, textarea");let isStepValid=true;inputs.forEach(input=>{if(!isFormInput(input))return;const fieldName=input.name||getAttrValue(input,"data-step-field-name");if(fieldName){const isFieldValid=validateField(fieldName);if(!isFieldValid){isStepValid=false}}});logVerbose(`Step validation result: ${stepId}`,{isValid:isStepValid});return isStepValid}function validateAllVisibleFields(){logVerbose("Validating all visible fields");let allValid=true;const validationResults={};for(const[fieldName,fieldValidation]of fieldValidations){const stepElement=fieldValidation.element.closest(SELECTORS.STEP);let shouldValidate=true;if(stepElement){const stepId=getAttrValue(stepElement,"data-answer");if(stepId&&!isVisible(stepElement)){shouldValidate=false}}if(shouldValidate){const isValid=validateField(fieldName);validationResults[fieldName]=isValid;if(!isValid){allValid=false}}}logVerbose("All visible fields validation complete",{allValid,results:validationResults});return allValid}function clearFieldValidation(fieldName){const fieldValidation=fieldValidations.get(fieldName);if(!fieldValidation)return;fieldValidation.isValid=true;fieldValidation.errorMessage=void 0;updateFieldVisualState(fieldValidation.element,true);logVerbose(`Cleared validation for field: ${fieldName}`)}function clearAllValidation(){logVerbose("Clearing all field validation");fieldValidations.forEach((validation,fieldName)=>{clearFieldValidation(fieldName)})}function getValidationState(){return{initialized:initialized3,fieldValidations:Array.from(fieldValidations.entries()).reduce((acc,[key,value])=>{acc[key]={isValid:value.isValid,errorMessage:value.errorMessage,rules:value.rules.map(r=>r.type)};return acc},{})}}function resetValidation(){logVerbose("Resetting validation");eventCleanupFunctions2.forEach(cleanup=>cleanup());eventCleanupFunctions2=[];clearAllValidation();fieldValidations.clear();navigatedSteps2.clear();initialized3=false;logVerbose("Validation reset complete")}function initBrowserValidationFix(root=document){logVerbose("Initializing browser validation fix");const forms=root.querySelectorAll("form");let formsFixed=0;forms.forEach(form=>{if(!form.hasAttribute("novalidate")){form.setAttribute("novalidate","true");formsFixed++;logVerbose(`Added novalidate to form: ${form.id||"unnamed"}`)}});const requiredInputs=root.querySelectorAll("input[required], select[required], textarea[required]");let inputsFixed=0;requiredInputs.forEach(input=>{const fieldName=input.name||input.getAttribute("data-step-field-name")||"unnamed";input.setAttribute("data-required","true");input.removeAttribute("required");inputsFixed++;logVerbose(`Fixed validation conflict: ${fieldName} (required \u2192 data-required)`)});const inputsWithValidation=root.querySelectorAll("input, select, textarea");inputsWithValidation.forEach(input=>{if("setCustomValidity"in input&&typeof input.setCustomValidity==="function"){input.setCustomValidity("")}});logVerbose(`Browser validation fix complete: ${formsFixed} forms, ${inputsFixed} inputs fixed`);return{formsFixed,inputsFixed,conflictsEliminated:inputsFixed>0}}var initialized4=false;var eventCleanupFunctions3=[];var summaryFields=[];function initSummary(root=document){if(initialized4){logVerbose("Summary already initialized, cleaning up first");resetSummary()}logVerbose("Initializing summary functionality");const summaryElements=queryAllByAttr(SELECTORS.SUMMARY_FIELD,root);logVerbose(`Found ${summaryElements.length} summary fields`);setupSummaryFields(summaryElements);setupSummaryEventListeners();updateAllSummaries();initialized4=true;formEvents.registerModule("summary");logVerbose("Summary initialization complete")}function setupSummaryFields(summaryElements){summaryElements.forEach(element=>{const summaryFieldAttr=getAttrValue(element,"data-summary-field");if(!summaryFieldAttr)return;const fieldNames=summaryFieldAttr.split("|").map(name=>name.trim());const joinAttr=getAttrValue(element,"data-join");const joinType=joinAttr&&joinAttr in DEFAULTS.JOIN_SEPARATOR?joinAttr:"space";const type=getAttrValue(element,"data-summary-type")||void 0;const subtype=getAttrValue(element,"data-summary-subtype")||void 0;const number=getAttrValue(element,"data-summary-number")||void 0;const summaryField={element,fieldNames,joinType,type,subtype,number};summaryFields.push(summaryField);logVerbose("Summary field configured",{fieldNames,joinType,type,subtype,number})})}function setupSummaryEventListeners(){const cleanup1=formEvents.on("field:change",handleFieldChangeEvent);const cleanup2=formEvents.on("field:input",handleFieldChangeEvent);eventCleanupFunctions3.push(cleanup1,cleanup2);logVerbose("Summary module subscribed to centralized field events")}function handleFieldChangeEvent(data){const{fieldName,value,eventType}=data;logVerbose(`Summary received field ${eventType}: ${fieldName}`,{value});updateSummariesForField(fieldName)}function updateSummariesForField(fieldName){summaryFields.forEach(summaryField=>{if(summaryField.fieldNames.includes(fieldName)){updateSummaryField(summaryField)}})}function updateSummary(){logVerbose("Updating all summaries");updateAllSummaries()}function updateAllSummaries(){summaryFields.forEach(summaryField=>{updateSummaryField(summaryField)})}function updateSummaryField(summaryField){const values=[];summaryField.fieldNames.forEach(fieldName=>{const value=FormState.getField(fieldName);if(value!==null&&value!==void 0&&value!==""){if(Array.isArray(value)){values.push(...value.filter(v=>v!==""))}else{values.push(String(value))}}});const joinedValue=joinValues(values,summaryField.joinType);updateSummaryElement(summaryField.element,joinedValue);logVerbose(`Summary field updated`,{fieldNames:summaryField.fieldNames,values,joinType:summaryField.joinType,result:joinedValue})}function joinValues(values,joinType){if(values.length===0)return"";const separator=DEFAULTS.JOIN_SEPARATOR[joinType];return values.join(separator)}function updateSummaryElement(element,value){element.textContent=value;if(value===""){element.classList.add("summary-empty");element.classList.remove("summary-filled")}else{element.classList.remove("summary-empty");element.classList.add("summary-filled")}}function clearSummary(fieldNames){if(fieldNames){logVerbose("Clearing specific summary fields",fieldNames);FormState.clearFields(fieldNames);fieldNames.forEach(fieldName=>{updateSummariesForField(fieldName)})}else{logVerbose("Clearing all summaries");FormState.clear();updateAllSummaries()}}function getSummaryState(){const state={};summaryFields.forEach((summaryField,index)=>{const key=summaryField.type&&summaryField.subtype&&summaryField.number?`${summaryField.type}-${summaryField.subtype}-${summaryField.number}`:`summary-${index}`;state[key]={hasContent:(summaryField.element.textContent||"").trim().length>0}});return state}function resetSummary(){logVerbose("Resetting summary functionality");eventCleanupFunctions3.forEach(cleanup=>cleanup());eventCleanupFunctions3=[];summaryFields.forEach(summaryField=>{updateSummaryElement(summaryField.element,"")});summaryFields=[];initialized4=false;logVerbose("Summary reset complete")}console.log("\u{1F680} [FormLib] === SCRIPT VERSION CHECK ===");console.log("\u{1F4E6} [FormLib] Script Version: CACHE_BUST_2025_01_28_22_15_ERROR_STYLING_FOCUS");console.log("\u{1F517} [FormLib] Expected URL: @9705259 or newer");console.log("\u23F0 [FormLib] Load Time:",new Date().toISOString());var FormLibrary=class{constructor(){this.initialized=false;this.rootElement=document;logVerbose("FormLibrary instance created")}static getInstance(){if(!FormLibrary.instance){FormLibrary.instance=new FormLibrary}return FormLibrary.instance}init(root=document){if(this.initialized){logVerbose("FormLibrary already initialized, reinitializing...");this.destroy()}this.rootElement=root;logVerbose("Initializing FormLibrary",{root:root===document?"document":"custom element"});const multistepForms=root.querySelectorAll(SELECTORS.MULTISTEP);const logicForms=root.querySelectorAll(SELECTORS.LOGIC);const stepElements=root.querySelectorAll(SELECTORS.STEP);logVerbose("Form detection results",{multistepForms:multistepForms.length,logicForms:logicForms.length,stepElements:stepElements.length});if(multistepForms.length===0&&stepElements.length===0){logVerbose("No compatible forms found, library will not initialize");return}try{initFieldCoordinator(root);initBrowserValidationFix(root);initErrors(root);initValidation(root);if(multistepForms.length>0||stepElements.length>0){initMultiStep(root)}initSummary(root);this.initialized=true;logVerbose("FormLibrary initialization complete");this.logCurrentState()}catch(error){logVerbose("FormLibrary initialization failed",error);throw error}}destroy(){if(!this.initialized){logVerbose("FormLibrary not initialized, nothing to destroy");return}logVerbose("Destroying FormLibrary");try{resetFieldCoordinator()}catch(error){logVerbose("Error during FormLibrary destruction",error)}FormState.clear();clearQueryCache();this.initialized=false;logVerbose("FormLibrary destruction complete")}isInitialized(){return this.initialized}getState(){return{initialized:this.initialized,formState:FormState.getDebugInfo(),multiStep:{note:"Simplified linear navigation - debug info removed"},validation:getValidationState(),errors:getErrorState(),summary:getSummaryState()}}logCurrentState(){const state=this.getState();logVerbose("Current FormLibrary State",state)}validateForm(){if(!this.initialized){logVerbose("Cannot validate form - library not initialized");return false}logVerbose("Validating entire form");const isValid=validateAllVisibleFields();logVerbose("Form validation result",{isValid});return isValid}resetForm(){if(!this.initialized){logVerbose("Cannot reset form - library not initialized");return}logVerbose("Resetting form to initial state");clearAllErrors();FormState.clear();clearSummary();try{goToStep(0)}catch(error){logVerbose("Could not go to first step during reset",error)}logVerbose("Form reset complete")}getFormData(){return FormState.getAll()}setFormData(data){Object.entries(data).forEach(([key,value])=>{FormState.setField(key,value)});updateSummary();logVerbose("Form data set",data)}debugStepSystem(){debugStepSystem()}getNavigatedSteps(){return getNavigatedSteps()}showError(fieldName,message){showError(fieldName,message)}clearError(fieldName){clearError(fieldName)}clearAllErrors(){clearAllErrors()}hasError(fieldName){return hasError(fieldName)}getFieldsWithErrors(){return getFieldsWithErrors()}};var FormLib=FormLibrary.getInstance();var Forms_default=FormLib;if(typeof window!=="undefined"){const autoInit=()=>{const multistepForms=document.querySelectorAll(SELECTORS.MULTISTEP);const stepElements=document.querySelectorAll(SELECTORS.STEP);console.log("\u{1F50D} [FormLib] Auto-init check:",{multistepForms:multistepForms.length,stepElements:stepElements.length,readyState:document.readyState});if(multistepForms.length>0||stepElements.length>0){console.log("\u{1F680} [FormLib] Auto-initializing FormLibrary");try{FormLib.init();console.log("\u2705 [FormLib] Auto-initialization complete")}catch(error){console.error("\u274C [FormLib] Auto-initialization failed:",error)}}else{console.log("\u23ED\uFE0F [FormLib] No compatible forms found, skipping auto-init")}};const webflowWindow=window;if(webflowWindow.Webflow?.push){console.log("\u{1F310} [FormLib] Using Webflow.push for initialization");webflowWindow.Webflow.push(autoInit)}else{console.log("\u{1F504} [FormLib] Webflow not available, using DOM events")}if(document.readyState==="loading"){console.log("\u23F3 [FormLib] DOM loading, waiting for ready");document.addEventListener("DOMContentLoaded",autoInit)}else{console.log("\u2705 [FormLib] DOM already ready, initializing now");setTimeout(autoInit,100)}setTimeout(()=>{if(!FormLib.isInitialized()){console.log("\u{1F501} [FormLib] Fallback initialization attempt");autoInit()}},1e3)}if(typeof window!=="undefined"){window.FormLib=FormLib;logVerbose("FormLib attached to window for debugging")}return __toCommonJS(Forms_exports);})();
